[{"/Users/amintiti/Desktop/bricole/src/index.js":"1","/Users/amintiti/Desktop/bricole/src/App.js":"2","/Users/amintiti/Desktop/bricole/src/reportWebVitals.js":"3","/Users/amintiti/Desktop/bricole/src/components/layout/Footer.jsx":"4","/Users/amintiti/Desktop/bricole/src/components/layout/NavBar.jsx":"5","/Users/amintiti/Desktop/bricole/src/components/Login.jsx":"6","/Users/amintiti/Desktop/bricole/src/components/SingUp.jsx":"7","/Users/amintiti/Desktop/bricole/src/context/UserContextProvider.js":"8","/Users/amintiti/Desktop/bricole/src/components/config/fire.js":"9","/Users/amintiti/Desktop/bricole/src/components/Dashboard.jsx":"10","/Users/amintiti/Desktop/bricole/src/components/user/UserPage.jsx":"11","/Users/amintiti/Desktop/bricole/src/components/user/Profil.jsx":"12","/Users/amintiti/Desktop/bricole/src/components/user/ProfilDisabled.jsx":"13","/Users/amintiti/Desktop/bricole/src/components/layout/CardAdvertesing.jsx":"14","/Users/amintiti/Desktop/bricole/src/components/DetailsPage.jsx":"15","/Users/amintiti/Desktop/bricole/src/components/layout/EmailModal.jsx":"16","/Users/amintiti/Desktop/bricole/src/components/user/Inbox.jsx":"17","/Users/amintiti/Desktop/bricole/src/components/user/DisplayEmails.jsx":"18","/Users/amintiti/Desktop/bricole/src/components/BokaMera.jsx":"19","/Users/amintiti/Desktop/bricole/src/components/layout/ResrvationModal.jsx":"20","/Users/amintiti/Desktop/bricole/src/components/layout/ReplayModal.jsx":"21","/Users/amintiti/Desktop/bricole/src/components/OrderPage.jsx":"22","/Users/amintiti/Desktop/bricole/src/components/user/Bookings.jsx":"23","/Users/amintiti/Desktop/bricole/src/components/BookingDetails.jsx":"24","/Users/amintiti/Desktop/bricole/src/components/layout/SearchBar.jsx":"25"},{"size":717,"mtime":1612957548014,"results":"26","hashOfConfig":"27"},{"size":2038,"mtime":1614636336516,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610455715048,"results":"29","hashOfConfig":"27"},{"size":2716,"mtime":1613083377871,"results":"30","hashOfConfig":"27"},{"size":6712,"mtime":1614641978237,"results":"31","hashOfConfig":"27"},{"size":3354,"mtime":1613403080504,"results":"32","hashOfConfig":"27"},{"size":4340,"mtime":1613392329397,"results":"33","hashOfConfig":"27"},{"size":7379,"mtime":1614639575473,"results":"34","hashOfConfig":"27"},{"size":430,"mtime":1612867250319,"results":"35","hashOfConfig":"27"},{"size":1081,"mtime":1614635566069,"results":"36","hashOfConfig":"27"},{"size":5245,"mtime":1614635984634,"results":"37","hashOfConfig":"27"},{"size":5344,"mtime":1613484048891,"results":"38","hashOfConfig":"27"},{"size":5807,"mtime":1613434223864,"results":"39","hashOfConfig":"27"},{"size":7494,"mtime":1614639200386,"results":"40","hashOfConfig":"27"},{"size":4262,"mtime":1614181627952,"results":"41","hashOfConfig":"27"},{"size":3492,"mtime":1613783990574,"results":"42","hashOfConfig":"27"},{"size":3031,"mtime":1613933149038,"results":"43","hashOfConfig":"27"},{"size":2861,"mtime":1614611834832,"results":"44","hashOfConfig":"27"},{"size":6274,"mtime":1614623029751,"results":"45","hashOfConfig":"27"},{"size":5294,"mtime":1614097901533,"results":"46","hashOfConfig":"27"},{"size":3828,"mtime":1614489908757,"results":"47","hashOfConfig":"27"},{"size":108,"mtime":1614096449394,"results":"48","hashOfConfig":"27"},{"size":3000,"mtime":1614116755278,"results":"49","hashOfConfig":"27"},{"size":2168,"mtime":1614116651086,"results":"50","hashOfConfig":"27"},{"size":3227,"mtime":1614637587843,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1qjkfzm",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"54"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"54"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"54"},"/Users/amintiti/Desktop/bricole/src/index.js",[],["122","123"],"/Users/amintiti/Desktop/bricole/src/App.js",[],"/Users/amintiti/Desktop/bricole/src/reportWebVitals.js",[],"/Users/amintiti/Desktop/bricole/src/components/layout/Footer.jsx",["124"],"import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Grid from \"@material-ui/core/Grid\";\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n  container: {\n    // position: \"absolute\",\n    // bottom: \"0\",\n    background: \" #000000\",\n    display: \"flex\",\n\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"300px\",\n    justifyContent: \"space-around\",\n  },\n});\n\nfunction Footer() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  return (\n    <Container className={classes.container} maxWidth=\"m\">\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Footer;\n","/Users/amintiti/Desktop/bricole/src/components/layout/NavBar.jsx",["125","126","127","128"],"/Users/amintiti/Desktop/bricole/src/components/Login.jsx",["129","130","131"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { UserContext } from \"../context/UserContextProvider\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n  btnLink: {\n    padding: \"5px 5px\",\n  },\n}));\n\nfunction Login() {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const {\n    handelSingIn,\n    setEmail,\n    myPassword,\n    setMyPassword,\n    eml,\n    Changes,\n  } = useContext(UserContext);\n\n  const onSubmit = (data, e) => {\n    handelSingIn();\n    Changes();\n  };\n\n  useEffect(() => {\n    Changes();\n  }, [onSubmit]);\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <h1> Bricole </h1>\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Box>\n            <TextField\n              value={eml}\n              onChange={(e) => setEmail(e.target.value)}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"email\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              inputRef={register({\n                required: true,\n                pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i },\n              })}\n            />\n            {errors.email && (\n              <div className={classes.error}> Invalid Email </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              value={myPassword}\n              onChange={(e) => setMyPassword(e.target.value)}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              inputRef={register({ required: true, minLength: 7 })}\n            />\n            {errors.password && (\n              <div className={classes.error}>\n                Password is required (8 Caracters)\n              </div>\n            )}\n          </Box>\n          <Box className={classes.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              SingIn\n            </Button>\n            <Link to=\"SingUp\" className={classes.btnLink}>\n              Create your Bricole Account{\" \"}\n            </Link>\n          </Box>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Login;\n","/Users/amintiti/Desktop/bricole/src/components/SingUp.jsx",["132","133","134","135"],"import React, { useRef, useContext, useState } from \"react\";\nimport { UserContext } from \"../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField } from \"@material-ui/core\";\n\nimport { Container } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  label: {\n    padding: \"5px 5px\",\n  },\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"10px 10px\",\n  },\n  box: {\n    margin: \"10px 10px\",\n  },\n}));\n\nfunction SingUp() {\n  const [passwordCheck, setPasswordcheck] = useState(\"\");\n  const classes = useStyles();\n  const { register, handleSubmit, errors, watch } = useForm();\n  const {\n    handelSingUp,\n    setEmail,\n    myPassword,\n    setMyPassword,\n    eml,\n    user,\n  } = useContext(UserContext);\n  const history = useHistory();\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const onSubmit = (data, e) => {\n    // Test only\n    if (myPassword == data.password) {\n      handelSingUp();\n      e.target.reset();\n      history.push(\"/Profil\");\n    }\n  };\n\n  return (\n    <div>\n      <Container className={classes.container} maxWidth=\"sm\">\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-between\"\n          alignItems=\"stretch\"\n        >\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Box className={classes.box}>\n              <TextField\n                value={eml}\n                onChange={(e) => setEmail(e.target.value)}\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"email\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                inputRef={register({\n                  required: true,\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  },\n                })}\n              />\n              {errors.email && (\n                <div className={classes.error}> Invalid Email </div>\n              )}\n            </Box>\n\n            <Box className={classes.box}>\n              <TextField\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                inputRef={register({ required: true, minLength: 8 })}\n              />\n              {errors.passwordpass && (\n                <div className={classes.error}>\n                  {\" \"}\n                  Password is required (8 Caracters)\n                </div>\n              )}\n            </Box>\n            <Box className={classes.box}>\n              <TextField\n                className={classes.TextField}\n                id=\"inputPassword\"\n                label=\"Confrime Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password_repeat\"\n                inputRef={register({\n                  validate: (value) =>\n                    value === password.current || \"The passwords do not match\",\n                })}\n                value={myPassword}\n                onChange={(e) => setMyPassword(e.target.value)}\n              />\n              {errors.password_repeat && (\n                <div className={classes.error}>\n                  {errors.password_repeat.message}\n                </div>\n              )}\n            </Box>\n            <Box className={classes.btnBox}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                SingUp\n              </Button>\n            </Box>\n          </form>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default SingUp;\n","/Users/amintiti/Desktop/bricole/src/context/UserContextProvider.js",["136","137","138","139","140","141"],"import React, { createContext, useState, useEffect } from \"react\";\nimport fire from \"../components/config/fire\";\nimport { useHistory } from \"react-router\";\n\nexport const UserContext = createContext({});\n\nfunction UserContextProvider({ children }) {\n  const [user, setUser] = useState(\"\");\n  const [eml, setEmail] = useState(\"\");\n  const [myPassword, setMyPassword] = useState(\"\");\n  const [profil, setprofil] = useState({});\n  const [profilData, setprofilData] = useState(\"\");\n  const [ads, setUserAds] = useState([]);\n  const [userCollection, setuserCollection] = useState([]);\n  const [readEmails, setReadEmails] = useState([]);\n  const [bookings, setbookings] = useState([]);\n  const [getLocalStorage, setGetLocalStorage] = useState(\"\");\n  const [getLclStorage, setGetLclStorage] = useState(\"\");\n  let tempDoc = [];\n  let tempDocUsers = [];\n  let emailsData = [];\n  let bookingArr = [];\n\n  const history = useHistory();\n\n  const handelSingUp = () =>\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(eml, myPassword)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email.already-in-use\":\n          case \"auth-invalid.email\":\n            alert(err.message);\n            break;\n          case \"auth/weak-password\":\n            alert(err.message);\n            break;\n        }\n      });\n\n  const handelSingIn = () =>\n    fire\n      .auth()\n      .signInWithEmailAndPassword(eml, myPassword)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            return alert(err.message);\n\n            break;\n          case \"auth/wrong-password\":\n          case \"auth/wrong-password\":\n            return alert(err.message);\n            break;\n        }\n      });\n\n  const handelLogOut = () => {\n    fire.auth().signOut();\n    history.push(\"/\");\n  };\n\n  const CreateCollection = (data) => {\n    console.log(data);\n    if (user) {\n      const newdata = {\n        Company: data.Company,\n        Profession: data.Profession,\n        email: data.email,\n        adress: data.adress,\n        city: data.city,\n        firstname: data.firstname,\n        lastname: data.lastname,\n        id: user.uid,\n      };\n      fire.firestore().collection(\"users\").doc(user.uid).set({ newdata });\n    }\n  };\n\n  const getCollection = async (userId) => {\n    await fire\n      .firestore()\n      .collection(\"users\")\n      .doc(userId)\n      .get()\n      .then((doc) => {\n        setprofilData(doc.data());\n      });\n  };\n\n  const Changes = () => {\n    if (user) {\n      let documentRef = fire.firestore().collection(\"users\").doc(user.uid);\n      documentRef.get().then((documentSnapshot) => {\n        if (documentSnapshot.exists) {\n          history.push(\"/UserPage\");\n        }\n      });\n    }\n  };\n\n  const getAd = async (data) => {\n    const file = data.image[0];\n    const storagRef = fire.storage().ref();\n    const fileRef = storagRef.child(data.image[0].name);\n    await fileRef.put(data.image[0]);\n    const fileUrl = await fileRef.getDownloadURL();\n\n    const payload = {\n      titel: data.titel,\n      Price: data.price,\n      city: data.city,\n      avatar: fileUrl,\n      profession: data.Profession,\n      description: data.description,\n      id: user.uid,\n    };\n\n    await fire.firestore().collection(\"advertising\").add({ payload });\n    await getDataAds();\n    await getAllUsers();\n  };\n\n  const emails = async (data) => {\n    await fire.firestore().collection(\"emails\").add({ data });\n    await getDataAds();\n    await getAllUsers();\n  };\n\n  const getDataAds = async () => {\n    await fire\n      .firestore()\n      .collection(\"advertising\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc, key) => {\n          // doc.data() is never undefined for query doc snapshots => Notice\n          let payload = {\n            adsId: doc.id,\n            Price: doc.data().payload.Price,\n            avatar: doc.data().payload.avatar,\n            city: doc.data().payload.city,\n            description: doc.data().payload.description,\n            profession: doc.data().payload.profession,\n            id: doc.data().payload.id,\n            titel: doc.data().payload.titel,\n          };\n\n          tempDoc.push({ ...payload });\n        });\n        setUserAds(tempDoc);\n      });\n  };\n\n  const getAllUsers = async () => {\n    await fire\n      .firestore()\n      .collection(\"users\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          tempDocUsers.push({ ...doc.data().newdata });\n        });\n        setuserCollection(tempDocUsers);\n      });\n  };\n\n  const authListnner = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(user);\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListnner();\n  }, []);\n\n  const deleteData = (data, collectionName) => {\n    if (data) {\n      fire.firestore().collection(collectionName).doc(data).delete();\n    }\n  };\n\n  const getemails = async () => {\n    await fire\n      .firestore()\n      .collection(\"emails\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc, key) => {\n          // doc.data() is never undefined for query doc snapshots => Notice\n          let payload = {\n            emailId: doc.id,\n            titel: doc.data().data.titel,\n            email: doc.data().data.email,\n            userid: doc.data().data.id,\n            text: doc.data().data.text,\n          };\n\n          emailsData.push({ ...payload });\n        });\n        setReadEmails(emailsData);\n      });\n  };\n\n  const bookingData = async (data) => {\n    if (data) {\n      await fire.firestore().collection(\"booking\").add({ data });\n    }\n  };\n\n  const Getbookings = async () => {\n    await fire\n      .firestore()\n      .collection(\"booking\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc, key) => {\n          let payload = {\n            ReservationId: doc.id,\n            firstname: doc.data().data.firstname,\n            lastname: doc.data().data.lastname,\n            adress: doc.data().data.adress,\n            city: doc.data().data.city,\n            email: doc.data().data.email,\n            bookingTime: doc.data().data.booking,\n            userid: doc.data().data.id,\n            mobile: doc.data().data.mobile,\n            total: doc.data().data.totalamount,\n          };\n\n          bookingArr.push({ ...payload });\n        });\n        setbookings(bookingArr);\n      });\n  };\n\n  return (\n    <UserContext.Provider\n      value={{\n        tempDoc,\n        user,\n        ads,\n        setUser,\n        eml,\n        setEmail,\n        myPassword,\n        setMyPassword,\n        handelSingUp,\n        handelSingIn,\n        handelLogOut,\n        authListnner,\n        CreateCollection,\n        profil,\n        setprofil,\n        getCollection,\n        profilData,\n        Changes,\n        getAd,\n        getAllUsers,\n        getDataAds,\n        tempDocUsers,\n        userCollection,\n        deleteData,\n        emails,\n        getemails,\n        readEmails,\n        bookingData,\n        Getbookings,\n        bookings,\n        getLocalStorage,\n        setGetLocalStorage,\n        getLclStorage,\n        setGetLclStorage,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport default UserContextProvider;\n","/Users/amintiti/Desktop/bricole/src/components/config/fire.js",[],"/Users/amintiti/Desktop/bricole/src/components/Dashboard.jsx",["142","143"],"import React, { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../context/UserContextProvider\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardAdvertesing from \"./layout/CardAdvertesing\";\nimport SerachBar from \"./layout/SearchBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: 1500,\n  },\n  styleContainer: {\n    height: 300,\n    background: \"white\",\n    margin: \"1%\",\n    borderRadius: \"10px\",\n  },\n}));\nfunction Dashboard() {\n  const classes = useStyles();\n  const {\n    ads,\n    getAllUsers,\n    getDataAds,\n    userCollection,\n    profilData,\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    getAllUsers();\n    getDataAds();\n  }, []);\n\n  return (\n    <Container className={classes.container}>\n      <Container className={classes.styleContainer}> </Container>\n      <Container>\n        <SerachBar allUsersAds={ads} allUsers={userCollection} />\n        <CardAdvertesing allUsersAds={ads} />\n      </Container>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","/Users/amintiti/Desktop/bricole/src/components/user/UserPage.jsx",["144","145","146","147","148"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Fab, TextField, Button, Box } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CardAdvertesing from \"../layout/CardAdvertesing\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    minHeight: 1000,\n  },\n  containerFab: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"10px 10px\",\n  },\n  containerModal: {\n    background: \"white\",\n    padding: \"10px 10x\",\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  TextField: {\n    padding: \"10px 5px\",\n  },\n  close: {\n    color: \"black\",\n    float: \"right\",\n    padding: \"10px 10px\",\n    fontSize: \"50px\",\n    fontWeight: \"bold\",\n    zIndex: \"1000\",\n  },\n  hide: {\n    display: \"none\",\n\n    // remmber : type hiiden do not on materail ui work check why\n  },\n}));\n\nfunction UserPage() {\n  const classes = useStyles();\n  const [handleOpen, SethandleOpen] = useState(null);\n  const { register, handleSubmit, errors } = useForm();\n  const {\n    user,\n    getAd,\n    getDataAds,\n\n    ads,\n    getCollection,\n    getAllUsers,\n    userCollection,\n    profilData,\n  } = useContext(UserContext);\n\n  const clickHandler = () => {\n    SethandleOpen(true);\n  };\n\n  const onSubmit = async (data, e) => {\n    if (CurrentUserProfil[0].city) {\n      await getAd({ ...data, city: CurrentUserProfil[0].city });\n      data && SethandleOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    getAllUsers();\n    getDataAds();\n  }, []);\n\n  let currentUserid = user && user.uid;\n  const currentUser =\n    ads &&\n    ads.filter((elm) => {\n      return elm.id == currentUserid && currentUserid;\n    });\n\n  const CurrentUserProfil =\n    userCollection &&\n    userCollection.filter((elm) => {\n      return elm.id == currentUserid && currentUserid;\n    });\n\n  return (\n    <Container className={classes.container} maxWidth=\"m\">\n      <Container maxWidth=\"xs\" className={classes.containerFab}>\n        <Fab type=\"button\" onClick={clickHandler} className={classes.fab}>\n          <AddCircleIcon className={classes.cirkelIcon}></AddCircleIcon>\n        </Fab>\n      </Container>\n      <Modal open={handleOpen} className={classes.containerFab}>\n        <Container className={classes.containerModal}>\n          <CloseIcon\n            className={classes.close}\n            onClick={(e) => SethandleOpen(false)}\n          />\n\n          <form\n            className={classes.root}\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Titel\"\n              name=\"titel\"\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Price\"\n              name=\"price\"\n              type=\"number\"\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Profession\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Profession\"\n              name=\"Profession\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.Profession && (\n              <div className={classes.error}> Profession is required </div>\n            )}\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              type=\"file\"\n              name=\"image\"\n              variant=\"outlined\"\n              inputRef={register({ required: true })}\n            />\n\n            {/* <TextField\n              className={classes.hide}\n              id=\"outlined-basic\"\n              label=\"City\"\n              name=\"city\"\n              value={currentUserid && currentUserid[0].city}\n              multiline\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            /> */}\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Description  \"\n              name=\"description\"\n              multiline\n              rows={8}\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <Box className={classes.containerFab}>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Send\n              </Button>\n            </Box>\n          </form>\n        </Container>\n      </Modal>\n      <CardAdvertesing\n        currentUserAds={currentUser}\n        currentProfil={CurrentUserProfil}\n      />\n    </Container>\n  );\n}\n\nexport default UserPage;\n","/Users/amintiti/Desktop/bricole/src/components/user/Profil.jsx",["149","150","151","152","153","154","155","156"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, TextField, Button, Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n}));\n\nfunction Profil() {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const {\n    user,\n    CreateCollection,\n    profil,\n    setprofil,\n    setprofilData,\n    getCollection,\n    profilData,\n  } = useContext(UserContext);\n\n  const history = useHistory();\n\n  const onSubmit = (data, e) => {\n    CreateCollection(data);\n    history.push(\"/UserPage\");\n    e.target.reset();\n  };\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Firstname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Firstname\"\n              name=\"firstname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.firstname && (\n              <div className={classes.error}> Firstname is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Lastname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Lastname\"\n              name=\"lastname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.lastname && (\n              <div className={classes.error}> Lastname is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"email\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              inputRef={register({\n                required: true,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                },\n              })}\n            />\n            {errors.email && (\n              <div className={classes.error}> Invalid Email </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Profession\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Profession\"\n              name=\"Profession\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.Profession && (\n              <div className={classes.error}> Profession is required </div>\n            )}\n          </Box>\n\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Company\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Company\"\n              name=\"Company\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.company && (\n              <div className={classes.error}> Company name is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"adress\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Adress\"\n              name=\"adress\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.adress && (\n              <div className={classes.error}> The adress is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"City\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"City\"\n              name=\"city\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.city && (\n              <div className={classes.error}> City is required </div>\n            )}\n          </Box>\n          <Box className={classes.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Box>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Profil;\n","/Users/amintiti/Desktop/bricole/src/components/user/ProfilDisabled.jsx",["157","158","159","160","161","162"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, TextField, Button, Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n}));\n\nfunction ProfilDisabled() {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const { profilData, getCollection, user } = useContext(UserContext);\n  const [test, set] = useState(\"\");\n  const history = useHistory();\n\n  const ClickHandler = () => {\n    history.push(\"/profil\");\n  };\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        <form>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.firstname}\n              className={classes.TextField}\n              label=\"Firstname\"\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Firstname\"\n              name=\"firstname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.firstname && (\n              <div className={classes.error}> Firstname is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.lastname}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Lastname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Lastname\"\n              name=\"lastname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.lastname && (\n              <div className={classes.error}> Lastname is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.email}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"email\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              inputRef={register({\n                required: true,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                },\n              })}\n            />\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.Profession}\n              label=\"Profession\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Profession\"\n              name=\"Profession\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.Profession && (\n              <div className={classes.error}> Profession is required </div>\n            )}\n          </Box>\n\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.Company}\n              label=\"Company\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Company\"\n              name=\"Company\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.company && (\n              <div className={classes.error}> Company name is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.adress}\n              label=\"Adress\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Adress\"\n              name=\"adress\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.adress && (\n              <div className={classes.error}> The adress is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.city}\n              label=\"City\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"City\"\n              name=\"city\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.city && (\n              <div className={classes.error}> City is required </div>\n            )}\n          </Box>\n          <Box className={classes.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" onClick={ClickHandler}>\n              Update\n            </Button>\n          </Box>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default ProfilDisabled;\n","/Users/amintiti/Desktop/bricole/src/components/layout/CardAdvertesing.jsx",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"import React, { useState, useContext, useEffect } from \"react\";\nimport EmailModal from \"./EmailModal\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Fab,\n  TextField,\n  Button,\n  Box,\n  setRef,\n  jssPreset,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { ReportRounded } from \"@material-ui/icons\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport EmailIcon from \"@material-ui/icons/Email\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: \"10px 10px\",\n\n    // justifyContent: \"center\",\n  },\n  root: {\n    width: \"345px\",\n    margin: \"1% 1%\",\n    borderRadius: \"10px\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    marginLeft: \"auto\",\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n\n  delete: {\n    color: \" red\",\n    objectFit: \"contain\",\n  },\n  DetailsIcon: {\n    color: \"blue\",\n    zIndex: 1000,\n  },\n  price: {\n    color: \"green\",\n  },\n  Typography: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nfunction CardAdvertesing({\n  currentUserAds,\n  allUsersAds,\n  currentProfil,\n  homePageUser,\n}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [userData, setUserData] = useState(\"\");\n\n  const cloneES6 = [];\n\n  const {\n    user,\n    getCollection,\n    userCollection,\n    profilData,\n    deleteData,\n    getDataAds,\n    getLocalStorage,\n    setGetLocalStorage,\n    getLclStorage,\n    setGetLclStorage,\n  } = useContext(UserContext);\n\n  const DeleteHandler = async (e) => {\n    const id = e.currentTarget.getAttribute(\"data-del\");\n    if (id) {\n      await deleteData(id, \"advertising\");\n      await getDataAds();\n    }\n  };\n\n  const idHandler = (e) => {\n    const id = e.currentTarget.getAttribute(\"data-id\");\n    id && getCollection(id);\n  };\n\n  let proff = localStorage.getItem(\"pro\");\n  let town = localStorage.getItem(\"city\");\n\n  // refactor  this shit to one only  function\n  const filerCity =\n    allUsersAds &&\n    allUsersAds.filter((elm) => {\n      return elm.city == getLclStorage;\n    });\n\n  const filerProfession =\n    allUsersAds &&\n    allUsersAds.filter((elm) => {\n      return elm.profession == getLocalStorage && getLocalStorage;\n    });\n\n  const returnCityProfessionOrAllUsersAd = () => {\n    if (filerProfession && filerProfession.length > 0) {\n      console.log(\"hi\");\n      cloneES6.push(filerProfession);\n    } else if (filerCity && filerCity.length > 0) {\n      console.log(\"hej\");\n      cloneES6.push(filerCity);\n    } else {\n      cloneES6.push(allUsersAds);\n    }\n  };\n  returnCityProfessionOrAllUsersAd();\n\n  const DisplayCard = () => {\n    if (currentUserAds) {\n      return (\n        <Container className={classes.wrapper} maxWidth=\"m\">\n          {currentUserAds.map((item, index) => {\n            return (\n              <Card className={classes.root} key={index}>\n                <CardHeader\n                  title={item.profession}\n                  subheader={currentProfil && currentProfil[0].Company}\n                />\n\n                <CardMedia\n                  className={classes.media}\n                  image={item.avatar}\n                  title=\"\"\n                />\n                <CardContent>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    className={classes.Typography}\n                  >\n                    <span\n                      className={classes.price}\n                    >{`${item.Price} Kr/tim`}</span>\n                    {item.titel}\n                  </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                  <IconButton aria-label=\"More Details\">\n                    <Link to={`detailspage/${item.id}/${item.adsId}`}>\n                      <DetailsIcon className={classes.DetailsIcon} />\n                    </Link>\n                  </IconButton>\n\n                  <IconButton className={classes.expand}>\n                    <DeleteIcon\n                      data-del={item.adsId}\n                      onClick={DeleteHandler}\n                      className={classes.delete}\n                    />\n                  </IconButton>\n                </CardActions>\n              </Card>\n            );\n          })}\n        </Container>\n      );\n    } else if (cloneES6.length > 0) {\n      return (\n        <Container className={classes.wrapper} maxWidth=\"m\">\n          {cloneES6[0].map((item, index) => {\n            return (\n              <Card className={classes.root} key={index}>\n                <CardHeader\n                  title={item.profession}\n                  subheader={profilData && profilData.newdata.Company}\n                />\n\n                <CardMedia\n                  className={classes.media}\n                  image={item.avatar}\n                  title={item.id}\n                />\n                <CardContent>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    className={classes.Typography}\n                  >\n                    <span\n                      className={classes.price}\n                    >{`${item.Price} Kr/tim`}</span>\n                    {item.titel}\n                  </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                  <IconButton aria-label=\"More Details\">\n                    <Link\n                      to={`detailspage/${item.id}/${item.adsId}`}\n                      data-id={item.id}\n                      onClick={idHandler}\n                    >\n                      <DetailsIcon className={classes.DetailsIcon} />\n                    </Link>\n                  </IconButton>\n\n                  <IconButton aria-label=\"More Details\">\n                    <div>\n                      <EmailModal\n                        className={classes.DetailsIcon}\n                        userId={item.id}\n                      />\n                    </div>\n                  </IconButton>\n\n                  <Button color=\"primary\">\n                    <Link to={`/bokamera/${item.id}/${item.Price}`}>\n                      Reservation\n                    </Link>\n                  </Button>\n                </CardActions>\n              </Card>\n            );\n          })}\n        </Container>\n      );\n    }\n  };\n  return <> {DisplayCard()} </>;\n}\n\nexport default CardAdvertesing;\n","/Users/amintiti/Desktop/bricole/src/components/DetailsPage.jsx",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Fab,\n  TextField,\n  Button,\n  Box,\n  setRef,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { ReportRounded } from \"@material-ui/icons\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport EmailIcon from \"@material-ui/icons/Email\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    minHeight: 1200,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"40px 10px\",\n  },\n  root: {\n    width: \"90%\",\n    backgroundColor: \" #f7f0f0\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  price: {\n    color: \"green\",\n  },\n  title: {\n    color: \"black\",\n  },\n}));\n\nfunction DetailsPage(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const { profilData, getDataAds, getCollection, ads } = useContext(\n    UserContext\n  );\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const currentAdsid = props.match.params.adsid;\n  const userid = props.match.params.userid;\n\n  const userAds =\n    ads &&\n    ads.filter((elm) => {\n      return elm.adsId == currentAdsid && currentAdsid;\n    });\n\n  const getuser = async () => {\n    if (userid) {\n      await getCollection(userid);\n    }\n  };\n\n  useEffect(() => {\n    getuser();\n    getDataAds();\n  }, []);\n\n  const displayContent = () => {\n    if (userAds && profilData) {\n      return (\n        <Card className={classes.root}>\n          <CardHeader\n            title={userAds && userAds[0].profession}\n            // subheader={profilData && profilData.newdata.Company}\n          />\n          <CardMedia\n            className={classes.media}\n            image={userAds && userAds[0].avatar}\n            title=\"Paella dish\"\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              <Box className={classes.price}>{`${\n                userAds && userAds[0].Price\n              } :-`}</Box>\n              <Box className={classes.title}>\n                <h3> {userAds && userAds[0].titel} </h3>\n              </Box>\n              <Box>{userAds && userAds[0].description}</Box>\n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            <IconButton aria-label=\"add to favorites\">\n              <FavoriteIcon />\n            </IconButton>\n            <IconButton aria-label=\"share\">\n              <ShareIcon />\n            </IconButton>\n            <IconButton\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n              })}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            ></IconButton>\n          </CardActions>\n        </Card>\n      );\n    }\n  };\n\n  return (\n    <Container className={classes.container}>{displayContent()}</Container>\n  );\n}\n\nexport default DetailsPage;\n","/Users/amintiti/Desktop/bricole/src/components/layout/EmailModal.jsx",["207"],"import React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Container, Fab, TextField, Button, Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  mailICon: {\n    color: \"blue\",\n    zIndex: 1000,\n  },\n  containerFab: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"10px 10px\",\n  },\n  containerModal: {\n    background: \"white\",\n    padding: \"10px 10x\",\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  TextField: {\n    padding: \"10px 5px\",\n  },\n  close: {\n    color: \"black\",\n    float: \"right\",\n    padding: \"10px 10px\",\n    fontSize: \"50px\",\n    fontWeight: \"bold\",\n    zIndex: \"1000\",\n  },\n}));\n\nfunction EmailModal({ userId }) {\n  const classes = useStyles();\n  const [handleOpen, SethandleOpen] = useState(null);\n  const { register, handleSubmit, errors } = useForm();\n\n  const { emails } = useContext(UserContext);\n  const onSubmit = (data, e) => {\n    let values = { ...data, id: userId };\n    if (values) {\n      emails(values);\n      SethandleOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <EmailIcon\n        className={classes.mailICon}\n        onClick={(e) => SethandleOpen(true)}\n      />\n      <Modal open={handleOpen} className={classes.containerFab}>\n        <Container className={classes.containerModal}>\n          <CloseIcon\n            className={classes.close}\n            onClick={(e) => SethandleOpen(false)}\n          />\n\n          <form\n            className={classes.root}\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Titel\"\n              name=\"titel\"\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"email\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              inputRef={register({\n                required: true,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                },\n              })}\n            />\n            {errors.email && (\n              <div className={classes.error}> Invalid Email </div>\n            )}\n\n            {errors.Profession && (\n              <div className={classes.error}> Profession is required </div>\n            )}\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Text  \"\n              name=\"text\"\n              multiline\n              rows={8}\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <Box className={classes.containerFab}>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Send\n              </Button>\n            </Box>\n          </form>\n        </Container>\n      </Modal>\n    </>\n  );\n}\n\nexport default EmailModal;\n","/Users/amintiti/Desktop/bricole/src/components/user/Inbox.jsx",["208","209","210","211"],"import React, { useContext, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: \"90%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: \"20px 10px\",\n    // justifyContent: \"center\",\n  },\n  delete: {\n    color: \"red\",\n  },\n});\n\nfunction createData(index, email, Delete) {\n  return { index, email, Delete };\n}\nfunction Inbox() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const { getemails, readEmails, user, deleteData } = useContext(UserContext);\n\n  const id = user && user.uid;\n  const currentUser = readEmails.filter((elm) => {\n    return elm.userid == id;\n  });\n  useEffect(() => {\n    getemails();\n  }, []);\n\n  const DeleteHandler = async (e) => {\n    const id = e.currentTarget.getAttribute(\"data-del\");\n    if (id) {\n      await deleteData(id, \"emails\");\n      await getemails();\n    }\n  };\n\n  return (\n    <Container className={classes.wrapper}>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Index</TableCell>\n              <TableCell align=\"left\">email</TableCell>\n              <TableCell align=\"right\">Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {currentUser.map((row, index) => (\n              <TableRow key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\" align=\"left\">\n                  <Link\n                    to={`/displayemails/${row.emailId}`}\n                    data-id={row.emailId}\n                  >\n                    {row.email}\n                  </Link>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                  <IconButton>\n                    <DeleteIcon\n                      className={classes.delete}\n                      onClick={DeleteHandler}\n                      data-del={row.emailId}\n                    />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n}\n\nexport default Inbox;\n","/Users/amintiti/Desktop/bricole/src/components/user/DisplayEmails.jsx",["212","213","214","215","216","217","218"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Fab, TextField, Button, Box } from \"@material-ui/core\";\nimport ReplayModal from \"../layout/ReplayModal\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    minHeight: 1000,\n  },\n  inputWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n\n    minWidth: \"100%\",\n  },\n  TextField: {\n    padding: \"10px 10px\",\n  },\n  btn: {\n    width: \"10%\",\n    margin: \" 0 auto\",\n  },\n});\n\nfunction DisplayEmails(props) {\n  const classes = useStyles();\n  const [handleOpen, SethandleOpen] = useState(false);\n  const { readEmails, getemails, sendEmail } = useContext(UserContext);\n  let url = props.location.pathname;\n  const id = props.match.params.slug;\n\n  const currentuerEmails =\n    readEmails &&\n    readEmails.filter((elm) => {\n      return elm.emailId == id && id;\n    });\n\n  useEffect(() => {\n    getemails();\n  }, []);\n\n  const clickHandler = (e) => {\n    SethandleOpen(true);\n  };\n\n  const retrunCrntEpost = () => {\n    if (currentuerEmails.length > 0) {\n      return currentuerEmails[0].email;\n    }\n  };\n  const emailsContent = () => {\n    if (currentuerEmails.length != 0) {\n      return (\n        <Container className={classes.inputWrapper}>\n          <TextField\n            className={classes.TextField}\n            value={currentuerEmails && currentuerEmails[0].email}\n            id=\"outlined-basic\"\n            label=\"email\"\n            variant=\"outlined\"\n            type=\"text\"\n            placeholder=\"Email\"\n            name=\"email\"\n          />\n\n          <TextField\n            className={classes.TextField}\n            value={currentuerEmails && currentuerEmails[0].titel}\n            id=\"outlined-basic\"\n            label=\"Title\"\n            variant=\"outlined\"\n            type=\"text\"\n            placeholder=\"Title\"\n            name=\"Title\"\n          />\n          <TextField\n            value={currentuerEmails && currentuerEmails[0].text}\n            className={classes.TextField}\n            id=\"outlined-basic\"\n            label=\"Text  \"\n            name=\"text\"\n            multiline\n            rows={8}\n            variant=\"outlined\"\n          />\n        </Container>\n      );\n    }\n  };\n  return (\n    <Container className={classes.wrapper}>\n      {emailsContent()}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.btn}\n        onClick={clickHandler}\n      >\n        Answer\n      </Button>\n\n      <ReplayModal\n        openModal={handleOpen}\n        closeModal={SethandleOpen}\n        customerEmail={retrunCrntEpost()}\n      />\n    </Container>\n  );\n}\n\nexport default DisplayEmails;\n","/Users/amintiti/Desktop/bricole/src/components/BokaMera.jsx",["219","220","221","222","223","224","225","226","227","228","229","230"],"import \"date-fns\";\nimport React, { useState } from \"react\";\n\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Container, Grid, Button, Box } from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ResrvationModal from \"./layout/ResrvationModal\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"10px 10%\",\n    justifyContent: \"center\",\n\n    minHeight: 700,\n  },\n\n  textField: {\n    // marginLeft: theme.spacing(1),\n    // marginRight: theme.spacing(1),\n    width: 300,\n  },\n  btn: {\n    margin: 5,\n  },\n  btnWrapper: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridTemplateRows: \"1fr 1fr 1fr\",\n    gap: \"5px\",\n    padding: \"20px 20px\",\n  },\n  Subwrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n  Select: {\n    width: 300,\n    padding: \"5px 5px\",\n  },\n}));\n\nconst time = [\n  \"08.00 - 09:00\",\n  \"09:00 - 10:00\",\n  \"10:00 - 11:00\",\n  \"11:00 - 12:00\",\n  \"13:00 - 14-00\",\n  \"14:00 - 15:00\",\n  \"15:00 - 16:00\",\n  \"16:00 - 17:00\",\n  \"17:00 - 18:00\",\n];\nconst time2 = [\n  \"08.00 - 10:00\",\n  \"10:00 - 12:00\",\n  \"12:00 - 14:00\",\n  \"14:00 - 16:00\",\n  \"16:00 - 18-00\",\n];\nconst time3 = [\n  \"07.00 - 10:00\",\n  \"10:00 - 13:00\",\n  \"13:00 - 16:00\",\n  \"16:00 - 17:00\",\n];\n\nfunction BokaMera(props) {\n  const classes = useStyles();\n  const [disabledBtn, setDisaBledBtn] = useState(false);\n  const { register, handleSubmit, errors } = useForm();\n\n  let now = new Date();\n\n  const nowString =\n    now.getFullYear() +\n    \"-\" +\n    (now.getMonth() > 8 ? \"\" : \"0\") +\n    (now.getMonth() + 1) +\n    \"-\" +\n    (now.getDate() > 9 ? \"\" : \"0\") +\n    now.getDate();\n\n  const [number, setNumber] = useState(\"\");\n  const [date, setDate] = useState(nowString);\n  const [hour, SetHour] = useState(\"\");\n  const [handleOpen, SethandleOpen] = useState(false);\n\n  let id = props.match.params.slug;\n  let price = props.match.params.price;\n\n  // let ar = [];\n\n  // let now = new Date();\n\n  // for (let index = 0; index < 7; index++) {\n  //   let nowString = `${now.getFullYear()}-${now.getMonth() + 1}-${\n  //     now.getDate() + index\n  //   } `;\n  //   ar.push(nowString);\n  // }\n\n  const handleChange = (e) => {\n    setNumber(e.target.value);\n  };\n  const clickHandler = (e) => {\n    SetHour(e.target.textContent);\n    SethandleOpen(true);\n  };\n\n  const reservationTemplate = (e) => {\n    if (number == 1) {\n      return (\n        <Box className={classes.btnWrapper}>\n          {time.map((item, index) => {\n            return (\n              <Button\n                variant=\"contained\"\n                className={classes.btn}\n                key={index}\n                onClick={clickHandler}\n                disabled={disabledBtn}\n              >\n                {item}\n              </Button>\n            );\n          })}\n        </Box>\n      );\n    } else if (number == 2) {\n      return (\n        <Box className={classes.btnWrapper}>\n          {time2.map((item, index) => {\n            return (\n              <Button\n                variant=\"contained\"\n                className={classes.btn}\n                key={index}\n                onClick={clickHandler}\n                disabled={disabledBtn}\n              >\n                {item}\n              </Button>\n            );\n          })}\n        </Box>\n      );\n    } else if (number == 3) {\n      return (\n        <Box className={classes.btnWrapper}>\n          {time3.map((item, index) => {\n            return (\n              <Button\n                variant=\"contained\"\n                className={classes.btn}\n                key={index}\n                onClick={clickHandler}\n                disabled={disabledBtn}\n              >\n                {item}\n              </Button>\n            );\n          })}\n        </Box>\n      );\n    } else {\n      return (\n        <Box className={classes.btnWrapper}>\n          {time.map((item, index) => {\n            return (\n              <Button\n                variant=\"contained\"\n                className={classes.btn}\n                key={index}\n                disabled={true}\n              >\n                {item}\n              </Button>\n            );\n          })}\n        </Box>\n      );\n    }\n  };\n\n  return (\n    <Container className={classes.wrapper}>\n      <Container className={classes.Subwrapper}>\n        <InputLabel id=\"demo-simple\">Choose a day</InputLabel>\n        <Box>\n          <TextField\n            labelId=\"demo-simple\"\n            type=\"datetime-local\"\n            format={\"DD-MM-YYYY\"}\n            onChange={(e) => setDate(e.target.value)}\n            id=\"date\"\n            type=\"date\"\n            value={date}\n            defaultValue={nowString}\n            className={classes.Select}\n            inputProps={{\n              min: nowString,\n            }}\n          />\n        </Box>\n        <Box>\n          <InputLabel id=\"demo-simple-select-label\">Number of hours</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={number}\n            onClick={handleChange}\n            className={classes.Select}\n          >\n            <MenuItem value={null}>--</MenuItem>\n            <MenuItem value={1}>1</MenuItem>\n            <MenuItem value={2}>2</MenuItem>\n            <MenuItem value={3}>3</MenuItem>\n          </Select>\n        </Box>\n        {reservationTemplate()}\n      </Container>\n      <ResrvationModal\n        toggleModal={handleOpen}\n        setToggleModal={SethandleOpen}\n        time={hour}\n        numberOfHour={number}\n        ReservationDate={date}\n        Userid={id}\n        price={price}\n      />\n    </Container>\n  );\n}\n\nexport default BokaMera;\n","/Users/amintiti/Desktop/bricole/src/components/layout/ResrvationModal.jsx",["231","232","233","234"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Container, Fab, TextField, Button, Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  mailICon: {\n    color: \"blue\",\n    zIndex: 1000,\n  },\n  containerFab: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"10px 10px\",\n  },\n  containerModal: {\n    background: \"white\",\n    padding: \"10px 10x\",\n    display: \"flex\",\n\n    flexDirection: \"column\",\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  TextField: {\n    padding: \"10px 5px\",\n    width: \"100%\",\n  },\n  close: {\n    color: \"black\",\n    marginLeft: \"auto\",\n    padding: \"10px 10px\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    zIndex: \"1000\",\n  },\n}));\n\nfunction ResrvationModal({\n  toggleModal,\n  setToggleModal,\n  time,\n  numberOfHour,\n  ReservationDate,\n  Userid,\n  price,\n}) {\n  const classes = useStyles();\n\n  const { register, handleSubmit, errors } = useForm();\n  const history = useHistory();\n  const { emails, bookingData } = useContext(UserContext);\n\n  const onSubmit = (data, e) => {\n    let Newprice = parseInt(price);\n    const payload = {\n      ...data,\n      totalamount: Newprice * numberOfHour,\n      id: Userid,\n      booking: `${ReservationDate} ${time}`,\n    };\n    bookingData(payload);\n    history.push(\"/orderpage\");\n  };\n\n  return (\n    <div>\n      <Modal open={toggleModal} className={classes.containerFab}>\n        <Container className={classes.containerModal}>\n          <CloseIcon\n            className={classes.close}\n            onClick={(e) => setToggleModal(false)}\n          />\n          <form\n            className={classes.root}\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <Box>\n              <TextField\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"Firstname\"\n                name=\"firstname\"\n                variant=\"outlined\"\n                inputRef={register({ required: true, minLength: 2 })}\n              />\n            </Box>\n            <Box>\n              <TextField\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"lastname\"\n                name=\"lastname\"\n                variant=\"outlined\"\n                inputRef={register({ required: true, minLength: 2 })}\n              />\n            </Box>\n            <Box>\n              <TextField\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"email\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                inputRef={register({\n                  required: true,\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  },\n                })}\n              />\n              {errors.email && (\n                <div className={classes.error}> Invalid Email </div>\n              )}\n\n              {errors.Profession && (\n                <div className={classes.error}> Profession is required </div>\n              )}\n            </Box>\n            <Box>\n              <TextField\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"Mobile\"\n                name=\"mobile\"\n                type=\"number\"\n                variant=\"outlined\"\n                inputRef={register({ required: true, minLength: 7 })}\n              />\n            </Box>\n            <Box>\n              <TextField\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"adress\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"Adress\"\n                name=\"adress\"\n                inputRef={register({ required: true, minLength: 2 })}\n              />\n              {errors.adress && (\n                <div className={classes.error}> The adress is required </div>\n              )}\n            </Box>\n            <Box>\n              <TextField\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"City\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"City\"\n                name=\"city\"\n                inputRef={register({ required: true, minLength: 2 })}\n              />\n              {errors.city && (\n                <div className={classes.error}> City is required </div>\n              )}\n            </Box>\n\n            <Box className={classes.containerFab}>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Confirm\n              </Button>\n            </Box>\n          </form>\n        </Container>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ResrvationModal;\n","/Users/amintiti/Desktop/bricole/src/components/layout/ReplayModal.jsx",["235","236","237"],"import React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Container, Fab, TextField, Button, Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\n\nrequire(\"dotenv\").config();\nconst sgMail = require(\"@sendgrid/mail\");\nsgMail.setApiKey(process.env.REACT_APP_SENDGRID_API_KEY);\n\nconst msg = {\n  to: \"titiamin@icloud.com\",\n  from: \"titiamin@icloud.com\",\n  subject: \"Example Email\",\n  text: ` Dear user,Here is your email.`,\n  html: `  <p>Dear user,</p> <p>Here is your email.</p>`,\n};\n\nconst test = () => {\n  sgMail\n    .send(msg)\n    .then(() => {\n      console.log(\"Email sent\");\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mailICon: {\n    color: \"blue\",\n    zIndex: 1000,\n  },\n  containerFab: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"10px 10px\",\n  },\n  containerModal: {\n    background: \"white\",\n    padding: \"10px 10x\",\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  TextField: {\n    padding: \"10px 5px\",\n  },\n  close: {\n    color: \"black\",\n    float: \"right\",\n    padding: \"10px 10px\",\n    fontSize: \"50px\",\n    fontWeight: \"bold\",\n    zIndex: \"1000\",\n  },\n}));\nfunction ReplayModal({ openModal, closeModal, customerEmail }) {\n  const classes = useStyles();\n\n  const { emails } = useContext(UserContext);\n\n  const [handleOpen, SethandleOpen] = useState(null);\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = async (data, e) => {\n    console.log(process.env);\n    test();\n  };\n\n  return (\n    <>\n      <Modal open={openModal} className={classes.containerFab}>\n        <Container className={classes.containerModal}>\n          <CloseIcon\n            className={classes.close}\n            onClick={(e) => SethandleOpen(closeModal)}\n          />\n\n          <form\n            action=\"https://formspree.io/f/xoqpzonp\"\n            method=\"POST\"\n            className={classes.root}\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <TextField\n              className={classes.TextField}\n              value={customerEmail ? customerEmail : \"\"}\n              id=\"outlined-basic\"\n              label=\"email\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"_replyto\"\n              inputRef={register({\n                required: true,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                },\n              })}\n            />\n            {errors._replyto && (\n              <div className={classes.error}> Invalid Email </div>\n            )}\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Titel\"\n              name=\"titel\"\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Text  \"\n              name=\"message\"\n              multiline\n              rows={8}\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <Box className={classes.containerFab}>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Send\n              </Button>\n            </Box>\n          </form>\n        </Container>\n      </Modal>\n    </>\n  );\n}\n\nexport default ReplayModal;\n","/Users/amintiti/Desktop/bricole/src/components/OrderPage.jsx",[],"/Users/amintiti/Desktop/bricole/src/components/user/Bookings.jsx",["238","239","240","241"],"import React, { useContext, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: \"90%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: \"20px 10px\",\n    // justifyContent: \"center\",\n  },\n  delete: {\n    color: \"red\",\n  },\n});\n\nfunction createData(index, email, Delete) {\n  return { index, email, Delete };\n}\nfunction Bookings() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const { Getbookings, bookings, user, deleteData } = useContext(UserContext);\n\n  const id = user && user.uid;\n  const currentUser = bookings.filter((elm) => {\n    return elm.userid == id;\n  });\n\n  const DeleteHandler = async (e) => {\n    const id = e.currentTarget.getAttribute(\"data-del\");\n    console.log(id);\n    if (id) {\n      await deleteData(id, \"booking\");\n      await Getbookings();\n    }\n  };\n\n  useEffect(() => {\n    Getbookings();\n  }, []);\n\n  return (\n    <Container className={classes.wrapper}>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Index</TableCell>\n              <TableCell align=\"left\">email</TableCell>\n              <TableCell align=\"right\">Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {currentUser.map((row, index) => (\n              <TableRow key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\" align=\"left\">\n                  <Link to={`/bookingdetails/${row.ReservationId}`}>\n                    {row.bookingTime}\n                  </Link>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                  <IconButton>\n                    <DeleteIcon\n                      className={classes.delete}\n                      onClick={DeleteHandler}\n                      data-del={row.ReservationId}\n                    />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n}\n\nexport default Bookings;\n","/Users/amintiti/Desktop/bricole/src/components/BookingDetails.jsx",["242","243","244","245"],"import React, { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Button, Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"10px 10px\",\n    height: 600,\n  },\n  subWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    border: \" 1px solid grey\",\n\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  box: {\n    padding: \"10px 10px\",\n  },\n});\n\nfunction BookingDetails(props) {\n  const classes = useStyles();\n  const { Getbookings, bookings } = useContext(UserContext);\n  const id = props.match.params.slug;\n  const currentReservations =\n    bookings &&\n    bookings.filter((elm) => {\n      return elm.emailId == id && id;\n    });\n\n  useEffect(() => {\n    Getbookings();\n  }, []);\n\n  const display = () => {\n    if (bookings.length > 0) {\n      return (\n        <Container className={classes.subWrapper}>\n          <Box className={classes.box}>\n            Name:{\" \"}\n            {bookings && `${bookings[0].firstname} ${bookings[0].lastname}`}\n          </Box>\n          <Box className={classes.box}>\n            {\" \"}\n            booked date: {bookings && bookings[0].bookingTime}{\" \"}\n          </Box>\n          <Box className={classes.box}>\n            {\" \"}\n            Email: {bookings && bookings[0].email}{\" \"}\n          </Box>\n          <Box className={classes.box}>\n            {\" \"}\n            Mobile: {bookings && bookings[0].mobile}{\" \"}\n          </Box>\n          <Box className={classes.box}>\n            {\" \"}\n            Adress: {bookings && bookings[0].adress}{\" \"}\n          </Box>\n          <Box className={classes.box}>\n            {\" \"}\n            City: {bookings && bookings[0].city}{\" \"}\n          </Box>\n          <Box className={classes.box}>\n            {\" \"}\n            Total: {`${bookings && bookings[0].total} :-`}\n          </Box>\n        </Container>\n      );\n    }\n  };\n\n  return <Container className={classes.wrapper}>{display()}</Container>;\n}\n\nexport default BookingDetails;\n","/Users/amintiti/Desktop/bricole/src/components/layout/SearchBar.jsx",["246","247","248","249","250","251"],"import React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../../context/UserContextProvider\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Container, Grid, Button, Box, TextField } from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst useStyles = makeStyles((theme) => ({\n  bar: {\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    minHeight: \"60px\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    // border: \"1px solid grey\",\n    backgroundColor: \"white\",\n    borderRadius: \"10px\",\n  },\n  serachbars: {\n    width: \"100%\",\n\n    padding: \"10px 15px\",\n  },\n  formControl: {\n    width: \"100%\",\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction SearchBar({ allUsersAds, allUsers }) {\n  const classes = useStyles();\n\n  const {\n    getLocalStorage,\n    setGetLocalStorage,\n    getLclStorage,\n    setGetLclStorage,\n  } = useContext(UserContext);\n\n  const ClickhandlerPro = async (e) => {\n    setGetLclStorage(\"\");\n    localStorage.clear();\n    await localStorage.setItem(\"pro\", e.target.value);\n    await setGetLocalStorage(localStorage.getItem(\"pro\"));\n  };\n  const ClickhandlerCity = async (e) => {\n    setGetLocalStorage(\"\");\n    localStorage.clear();\n    await localStorage.setItem(\"city\", e.target.value);\n    await setGetLclStorage(localStorage.getItem(\"city\"));\n  };\n\n  return (\n    <AppBar className={classes.bar}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">\n          profession\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={getLocalStorage}\n          className={classes.serachbars}\n          onChange={ClickhandlerPro}\n          label=\"Profession\"\n        >\n          <MenuItem value={null}>------</MenuItem>\n          {allUsersAds &&\n            allUsersAds.map((item, index) => {\n              return (\n                <MenuItem value={item.profession} key={index}>\n                  {item.profession}\n                </MenuItem>\n              );\n            })}\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">City</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={getLclStorage}\n          className={classes.serachbars}\n          onChange={ClickhandlerCity}\n          label=\"City\"\n        >\n          <MenuItem value={null}>------</MenuItem>\n          {allUsers &&\n            allUsers.map((item, index) => {\n              return (\n                <MenuItem value={item.city} key={index}>\n                  {item.city}\n                </MenuItem>\n              );\n            })}\n        </Select>\n      </FormControl>\n    </AppBar>\n  );\n}\n\nexport default SearchBar;\n",{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":24,"column":5,"nodeType":"258","messageId":"259","endLine":24,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":12,"column":10,"nodeType":"262","messageId":"263","endLine":12,"endColumn":13},{"ruleId":"260","severity":1,"message":"264","line":86,"column":46,"nodeType":"262","messageId":"263","endLine":86,"endColumn":56},{"ruleId":"260","severity":1,"message":"265","line":89,"column":9,"nodeType":"262","messageId":"263","endLine":89,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":114,"column":11,"nodeType":"268","endLine":114,"endColumn":44},{"ruleId":"260","severity":1,"message":"269","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"270","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":20},{"ruleId":"271","severity":1,"message":"272","line":63,"column":6,"nodeType":"273","endLine":63,"endColumn":16,"suggestions":"274"},{"ruleId":"260","severity":1,"message":"275","line":43,"column":10,"nodeType":"262","messageId":"263","endLine":43,"endColumn":23},{"ruleId":"260","severity":1,"message":"276","line":43,"column":25,"nodeType":"262","messageId":"263","endLine":43,"endColumn":41},{"ruleId":"260","severity":1,"message":"277","line":52,"column":5,"nodeType":"262","messageId":"263","endLine":52,"endColumn":9},{"ruleId":"278","severity":1,"message":"279","line":61,"column":20,"nodeType":"280","messageId":"259","endLine":61,"endColumn":22},{"ruleId":"281","severity":1,"message":"282","line":31,"column":9,"nodeType":"283","messageId":"284","endLine":39,"endColumn":10},{"ruleId":"281","severity":1,"message":"282","line":47,"column":9,"nodeType":"283","messageId":"284","endLine":58,"endColumn":10},{"ruleId":"285","severity":1,"message":"286","line":53,"column":13,"nodeType":"287","messageId":"288","endLine":53,"endColumn":19},{"ruleId":"289","severity":1,"message":"290","line":55,"column":11,"nodeType":"291","messageId":"259","endLine":57,"endColumn":19},{"ruleId":"285","severity":1,"message":"286","line":57,"column":13,"nodeType":"287","messageId":"288","endLine":57,"endColumn":19},{"ruleId":"260","severity":1,"message":"292","line":106,"column":11,"nodeType":"262","messageId":"263","endLine":106,"endColumn":15},{"ruleId":"260","severity":1,"message":"264","line":26,"column":5,"nodeType":"262","messageId":"263","endLine":26,"endColumn":15},{"ruleId":"271","severity":1,"message":"293","line":32,"column":6,"nodeType":"273","endLine":32,"endColumn":8,"suggestions":"294"},{"ruleId":"260","severity":1,"message":"295","line":58,"column":5,"nodeType":"262","messageId":"263","endLine":58,"endColumn":18},{"ruleId":"260","severity":1,"message":"264","line":61,"column":5,"nodeType":"262","messageId":"263","endLine":61,"endColumn":15},{"ruleId":"271","severity":1,"message":"293","line":78,"column":6,"nodeType":"273","endLine":78,"endColumn":8,"suggestions":"296"},{"ruleId":"278","severity":1,"message":"279","line":84,"column":21,"nodeType":"280","messageId":"259","endLine":84,"endColumn":23},{"ruleId":"278","severity":1,"message":"279","line":90,"column":21,"nodeType":"280","messageId":"259","endLine":90,"endColumn":23},{"ruleId":"260","severity":1,"message":"269","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"297","line":1,"column":39,"nodeType":"262","messageId":"263","endLine":1,"endColumn":48},{"ruleId":"260","severity":1,"message":"277","line":38,"column":5,"nodeType":"262","messageId":"263","endLine":38,"endColumn":9},{"ruleId":"260","severity":1,"message":"298","line":40,"column":5,"nodeType":"262","messageId":"263","endLine":40,"endColumn":11},{"ruleId":"260","severity":1,"message":"299","line":41,"column":5,"nodeType":"262","messageId":"263","endLine":41,"endColumn":14},{"ruleId":"260","severity":1,"message":"300","line":42,"column":5,"nodeType":"262","messageId":"263","endLine":42,"endColumn":18},{"ruleId":"260","severity":1,"message":"295","line":43,"column":5,"nodeType":"262","messageId":"263","endLine":43,"endColumn":18},{"ruleId":"260","severity":1,"message":"264","line":44,"column":5,"nodeType":"262","messageId":"263","endLine":44,"endColumn":15},{"ruleId":"260","severity":1,"message":"297","line":1,"column":39,"nodeType":"262","messageId":"263","endLine":1,"endColumn":48},{"ruleId":"260","severity":1,"message":"301","line":38,"column":21,"nodeType":"262","messageId":"263","endLine":38,"endColumn":33},{"ruleId":"260","severity":1,"message":"295","line":39,"column":23,"nodeType":"262","messageId":"263","endLine":39,"endColumn":36},{"ruleId":"260","severity":1,"message":"277","line":39,"column":38,"nodeType":"262","messageId":"263","endLine":39,"endColumn":42},{"ruleId":"260","severity":1,"message":"302","line":40,"column":10,"nodeType":"262","messageId":"263","endLine":40,"endColumn":14},{"ruleId":"260","severity":1,"message":"303","line":40,"column":16,"nodeType":"262","messageId":"263","endLine":40,"endColumn":19},{"ruleId":"260","severity":1,"message":"297","line":1,"column":39,"nodeType":"262","messageId":"263","endLine":1,"endColumn":48},{"ruleId":"260","severity":1,"message":"304","line":8,"column":3,"nodeType":"262","messageId":"263","endLine":8,"endColumn":6},{"ruleId":"260","severity":1,"message":"305","line":9,"column":3,"nodeType":"262","messageId":"263","endLine":9,"endColumn":12},{"ruleId":"260","severity":1,"message":"261","line":11,"column":3,"nodeType":"262","messageId":"263","endLine":11,"endColumn":6},{"ruleId":"260","severity":1,"message":"306","line":12,"column":3,"nodeType":"262","messageId":"263","endLine":12,"endColumn":9},{"ruleId":"260","severity":1,"message":"307","line":13,"column":3,"nodeType":"262","messageId":"263","endLine":13,"endColumn":12},{"ruleId":"260","severity":1,"message":"308","line":15,"column":8,"nodeType":"262","messageId":"263","endLine":15,"endColumn":12},{"ruleId":"260","severity":1,"message":"309","line":21,"column":8,"nodeType":"262","messageId":"263","endLine":21,"endColumn":16},{"ruleId":"260","severity":1,"message":"310","line":22,"column":8,"nodeType":"262","messageId":"263","endLine":22,"endColumn":14},{"ruleId":"260","severity":1,"message":"311","line":25,"column":10,"nodeType":"262","messageId":"263","endLine":25,"endColumn":13},{"ruleId":"260","severity":1,"message":"312","line":26,"column":8,"nodeType":"262","messageId":"263","endLine":26,"endColumn":20},{"ruleId":"260","severity":1,"message":"313","line":27,"column":8,"nodeType":"262","messageId":"263","endLine":27,"endColumn":17},{"ruleId":"260","severity":1,"message":"314","line":28,"column":8,"nodeType":"262","messageId":"263","endLine":28,"endColumn":22},{"ruleId":"260","severity":1,"message":"315","line":29,"column":8,"nodeType":"262","messageId":"263","endLine":29,"endColumn":20},{"ruleId":"260","severity":1,"message":"316","line":31,"column":10,"nodeType":"262","messageId":"263","endLine":31,"endColumn":23},{"ruleId":"260","severity":1,"message":"317","line":33,"column":8,"nodeType":"262","messageId":"263","endLine":33,"endColumn":17},{"ruleId":"260","severity":1,"message":"318","line":84,"column":10,"nodeType":"262","messageId":"263","endLine":84,"endColumn":18},{"ruleId":"260","severity":1,"message":"319","line":84,"column":20,"nodeType":"262","messageId":"263","endLine":84,"endColumn":31},{"ruleId":"260","severity":1,"message":"320","line":85,"column":10,"nodeType":"262","messageId":"263","endLine":85,"endColumn":18},{"ruleId":"260","severity":1,"message":"321","line":85,"column":20,"nodeType":"262","messageId":"263","endLine":85,"endColumn":31},{"ruleId":"260","severity":1,"message":"277","line":90,"column":5,"nodeType":"262","messageId":"263","endLine":90,"endColumn":9},{"ruleId":"260","severity":1,"message":"322","line":92,"column":5,"nodeType":"262","messageId":"263","endLine":92,"endColumn":19},{"ruleId":"260","severity":1,"message":"323","line":97,"column":5,"nodeType":"262","messageId":"263","endLine":97,"endColumn":23},{"ruleId":"260","severity":1,"message":"324","line":99,"column":5,"nodeType":"262","messageId":"263","endLine":99,"endColumn":21},{"ruleId":"260","severity":1,"message":"325","line":115,"column":7,"nodeType":"262","messageId":"263","endLine":115,"endColumn":12},{"ruleId":"260","severity":1,"message":"326","line":116,"column":7,"nodeType":"262","messageId":"263","endLine":116,"endColumn":11},{"ruleId":"278","severity":1,"message":"279","line":122,"column":23,"nodeType":"280","messageId":"259","endLine":122,"endColumn":25},{"ruleId":"278","severity":1,"message":"279","line":128,"column":29,"nodeType":"280","messageId":"259","endLine":128,"endColumn":31},{"ruleId":"260","severity":1,"message":"269","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"304","line":6,"column":3,"nodeType":"262","messageId":"263","endLine":6,"endColumn":6},{"ruleId":"260","severity":1,"message":"305","line":7,"column":3,"nodeType":"262","messageId":"263","endLine":7,"endColumn":12},{"ruleId":"260","severity":1,"message":"327","line":8,"column":3,"nodeType":"262","messageId":"263","endLine":8,"endColumn":9},{"ruleId":"260","severity":1,"message":"306","line":10,"column":3,"nodeType":"262","messageId":"263","endLine":10,"endColumn":9},{"ruleId":"260","severity":1,"message":"328","line":14,"column":8,"nodeType":"262","messageId":"263","endLine":14,"endColumn":22},{"ruleId":"260","severity":1,"message":"309","line":19,"column":8,"nodeType":"262","messageId":"263","endLine":19,"endColumn":16},{"ruleId":"260","severity":1,"message":"310","line":20,"column":8,"nodeType":"262","messageId":"263","endLine":20,"endColumn":14},{"ruleId":"260","severity":1,"message":"314","line":26,"column":8,"nodeType":"262","messageId":"263","endLine":26,"endColumn":22},{"ruleId":"260","severity":1,"message":"315","line":27,"column":8,"nodeType":"262","messageId":"263","endLine":27,"endColumn":20},{"ruleId":"260","severity":1,"message":"329","line":28,"column":8,"nodeType":"262","messageId":"263","endLine":28,"endColumn":18},{"ruleId":"260","severity":1,"message":"316","line":29,"column":10,"nodeType":"262","messageId":"263","endLine":29,"endColumn":23},{"ruleId":"260","severity":1,"message":"330","line":30,"column":8,"nodeType":"262","messageId":"263","endLine":30,"endColumn":19},{"ruleId":"260","severity":1,"message":"317","line":31,"column":8,"nodeType":"262","messageId":"263","endLine":31,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":88,"column":24,"nodeType":"280","messageId":"259","endLine":88,"endColumn":26},{"ruleId":"271","severity":1,"message":"331","line":100,"column":6,"nodeType":"273","endLine":100,"endColumn":8,"suggestions":"332"},{"ruleId":"260","severity":1,"message":"304","line":7,"column":21,"nodeType":"262","messageId":"263","endLine":7,"endColumn":24},{"ruleId":"260","severity":1,"message":"333","line":34,"column":10,"nodeType":"262","messageId":"263","endLine":34,"endColumn":20},{"ruleId":"260","severity":1,"message":"265","line":39,"column":9,"nodeType":"262","messageId":"263","endLine":39,"endColumn":16},{"ruleId":"278","severity":1,"message":"279","line":45,"column":23,"nodeType":"280","messageId":"259","endLine":45,"endColumn":25},{"ruleId":"271","severity":1,"message":"334","line":49,"column":6,"nodeType":"273","endLine":49,"endColumn":8,"suggestions":"335"},{"ruleId":"260","severity":1,"message":"304","line":4,"column":21,"nodeType":"262","messageId":"263","endLine":4,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":4,"column":45,"nodeType":"262","messageId":"263","endLine":4,"endColumn":48},{"ruleId":"260","severity":1,"message":"336","line":33,"column":34,"nodeType":"262","messageId":"263","endLine":33,"endColumn":43},{"ruleId":"260","severity":1,"message":"337","line":34,"column":7,"nodeType":"262","messageId":"263","endLine":34,"endColumn":10},{"ruleId":"278","severity":1,"message":"279","line":40,"column":26,"nodeType":"280","messageId":"259","endLine":40,"endColumn":28},{"ruleId":"271","severity":1,"message":"334","line":45,"column":6,"nodeType":"273","endLine":45,"endColumn":8,"suggestions":"338"},{"ruleId":"278","severity":1,"message":"339","line":57,"column":33,"nodeType":"280","messageId":"259","endLine":57,"endColumn":35},{"ruleId":"260","severity":1,"message":"340","line":7,"column":21,"nodeType":"262","messageId":"263","endLine":7,"endColumn":25},{"ruleId":"260","severity":1,"message":"341","line":12,"column":8,"nodeType":"262","messageId":"263","endLine":12,"endColumn":20},{"ruleId":"260","severity":1,"message":"342","line":14,"column":3,"nodeType":"262","messageId":"263","endLine":14,"endColumn":26},{"ruleId":"260","severity":1,"message":"343","line":15,"column":3,"nodeType":"262","messageId":"263","endLine":15,"endColumn":21},{"ruleId":"260","severity":1,"message":"344","line":92,"column":23,"nodeType":"262","messageId":"263","endLine":92,"endColumn":37},{"ruleId":"260","severity":1,"message":"345","line":93,"column":11,"nodeType":"262","messageId":"263","endLine":93,"endColumn":19},{"ruleId":"260","severity":1,"message":"301","line":93,"column":21,"nodeType":"262","messageId":"263","endLine":93,"endColumn":33},{"ruleId":"260","severity":1,"message":"346","line":93,"column":35,"nodeType":"262","messageId":"263","endLine":93,"endColumn":41},{"ruleId":"278","severity":1,"message":"279","line":134,"column":16,"nodeType":"280","messageId":"259","endLine":134,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":152,"column":23,"nodeType":"280","messageId":"259","endLine":152,"endColumn":25},{"ruleId":"278","severity":1,"message":"279","line":170,"column":23,"nodeType":"280","messageId":"259","endLine":170,"endColumn":25},{"ruleId":"266","severity":1,"message":"267","line":219,"column":13,"nodeType":"268","endLine":219,"endColumn":24},{"ruleId":"260","severity":1,"message":"269","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"317","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":17},{"ruleId":"260","severity":1,"message":"304","line":8,"column":21,"nodeType":"262","messageId":"263","endLine":8,"endColumn":24},{"ruleId":"260","severity":1,"message":"347","line":62,"column":11,"nodeType":"262","messageId":"263","endLine":62,"endColumn":17},{"ruleId":"260","severity":1,"message":"304","line":6,"column":21,"nodeType":"262","messageId":"263","endLine":6,"endColumn":24},{"ruleId":"260","severity":1,"message":"347","line":67,"column":11,"nodeType":"262","messageId":"263","endLine":67,"endColumn":17},{"ruleId":"260","severity":1,"message":"348","line":69,"column":10,"nodeType":"262","messageId":"263","endLine":69,"endColumn":20},{"ruleId":"260","severity":1,"message":"333","line":34,"column":10,"nodeType":"262","messageId":"263","endLine":34,"endColumn":20},{"ruleId":"260","severity":1,"message":"265","line":39,"column":9,"nodeType":"262","messageId":"263","endLine":39,"endColumn":16},{"ruleId":"278","severity":1,"message":"279","line":45,"column":23,"nodeType":"280","messageId":"259","endLine":45,"endColumn":25},{"ruleId":"271","severity":1,"message":"349","line":59,"column":6,"nodeType":"273","endLine":59,"endColumn":8,"suggestions":"350"},{"ruleId":"260","severity":1,"message":"327","line":4,"column":21,"nodeType":"262","messageId":"263","endLine":4,"endColumn":27},{"ruleId":"260","severity":1,"message":"351","line":31,"column":9,"nodeType":"262","messageId":"263","endLine":31,"endColumn":28},{"ruleId":"278","severity":1,"message":"279","line":34,"column":26,"nodeType":"280","messageId":"259","endLine":34,"endColumn":28},{"ruleId":"271","severity":1,"message":"349","line":39,"column":6,"nodeType":"273","endLine":39,"endColumn":8,"suggestions":"352"},{"ruleId":"260","severity":1,"message":"269","line":1,"column":29,"nodeType":"262","messageId":"263","endLine":1,"endColumn":37},{"ruleId":"260","severity":1,"message":"353","line":7,"column":10,"nodeType":"262","messageId":"263","endLine":7,"endColumn":19},{"ruleId":"260","severity":1,"message":"340","line":7,"column":21,"nodeType":"262","messageId":"263","endLine":7,"endColumn":25},{"ruleId":"260","severity":1,"message":"327","line":7,"column":27,"nodeType":"262","messageId":"263","endLine":7,"endColumn":33},{"ruleId":"260","severity":1,"message":"261","line":7,"column":35,"nodeType":"262","messageId":"263","endLine":7,"endColumn":38},{"ruleId":"260","severity":1,"message":"305","line":7,"column":40,"nodeType":"262","messageId":"263","endLine":7,"endColumn":49},"no-native-reassign",["354"],"no-negated-in-lhs",["355"],"no-dupe-keys","Duplicate key 'justifyContent'.","ObjectExpression","unexpected","no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'profilData' is assigned a value but never used.","'history' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Changes'. Either include it or remove the dependency array.","ArrayExpression",["356"],"'passwordCheck' is assigned a value but never used.","'setPasswordcheck' is assigned a value but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-duplicate-case","Duplicate case label.","SwitchCase","'file' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllUsers' and 'getDataAds'. Either include them or remove the dependency array.",["357"],"'getCollection' is assigned a value but never used.",["358"],"'useEffect' is defined but never used.","'profil' is assigned a value but never used.","'setprofil' is assigned a value but never used.","'setprofilData' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'test' is assigned a value but never used.","'set' is assigned a value but never used.","'Fab' is defined but never used.","'TextField' is defined but never used.","'setRef' is defined but never used.","'jssPreset' is defined but never used.","'clsx' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'red' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'ReportRounded' is defined but never used.","'EmailIcon' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'userCollection' is assigned a value but never used.","'setGetLocalStorage' is assigned a value but never used.","'setGetLclStorage' is assigned a value but never used.","'proff' is assigned a value but never used.","'town' is assigned a value but never used.","'Button' is defined but never used.","'LocationOnIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'DetailsIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'getDataAds' and 'getuser'. Either include them or remove the dependency array.",["359"],"'createData' is defined but never used.","React Hook useEffect has a missing dependency: 'getemails'. Either include it or remove the dependency array.",["360"],"'sendEmail' is assigned a value but never used.","'url' is assigned a value but never used.",["361"],"Expected '!==' and instead saw '!='.","'Grid' is defined but never used.","'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'setDisaBledBtn' is assigned a value but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'emails' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Getbookings'. Either include it or remove the dependency array.",["362"],"'currentReservations' is assigned a value but never used.",["363"],"'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"366","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"371","fix":"373"},{"desc":"374","fix":"375"},{"desc":"374","fix":"376"},"Update the dependencies array to be: [Changes, onSubmit]",{"range":"377","text":"378"},"Update the dependencies array to be: [getAllUsers, getDataAds]",{"range":"379","text":"380"},{"range":"381","text":"380"},"Update the dependencies array to be: [getDataAds, getuser]",{"range":"382","text":"383"},"Update the dependencies array to be: [getemails]",{"range":"384","text":"385"},{"range":"386","text":"385"},"Update the dependencies array to be: [Getbookings]",{"range":"387","text":"388"},{"range":"389","text":"388"},[1393,1403],"[Changes, onSubmit]",[752,754],"[getAllUsers, getDataAds]",[1829,1831],[2651,2653],"[getDataAds, getuser]",[1404,1406],"[getemails]",[1125,1127],[1617,1619],"[Getbookings]",[930,932]]