[{"/Users/amintiti/Desktop/bricole/src/index.js":"1","/Users/amintiti/Desktop/bricole/src/App.js":"2","/Users/amintiti/Desktop/bricole/src/reportWebVitals.js":"3","/Users/amintiti/Desktop/bricole/src/components/layout/Footer.jsx":"4","/Users/amintiti/Desktop/bricole/src/components/layout/NavBar.jsx":"5","/Users/amintiti/Desktop/bricole/src/components/Login.jsx":"6","/Users/amintiti/Desktop/bricole/src/components/SingUp.jsx":"7","/Users/amintiti/Desktop/bricole/src/context/UserContextProvider.js":"8","/Users/amintiti/Desktop/bricole/src/components/config/fire.js":"9","/Users/amintiti/Desktop/bricole/src/components/Dashboard.jsx":"10","/Users/amintiti/Desktop/bricole/src/components/user/UserPage.jsx":"11","/Users/amintiti/Desktop/bricole/src/components/user/Profil.jsx":"12","/Users/amintiti/Desktop/bricole/src/components/user/ProfilDisabled.jsx":"13","/Users/amintiti/Desktop/bricole/src/components/layout/CardAdvertesing.jsx":"14","/Users/amintiti/Desktop/bricole/src/components/DetailsPage.jsx":"15","/Users/amintiti/Desktop/bricole/src/components/layout/EmailModal.jsx":"16"},{"size":717,"mtime":1612957548014,"results":"17","hashOfConfig":"18"},{"size":1280,"mtime":1613432293401,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610455715048,"results":"20","hashOfConfig":"18"},{"size":2716,"mtime":1613083377871,"results":"21","hashOfConfig":"18"},{"size":4854,"mtime":1613648757311,"results":"22","hashOfConfig":"18"},{"size":3354,"mtime":1613403080504,"results":"23","hashOfConfig":"18"},{"size":4340,"mtime":1613392329397,"results":"24","hashOfConfig":"18"},{"size":5129,"mtime":1613654801649,"results":"25","hashOfConfig":"18"},{"size":430,"mtime":1612867250319,"results":"26","hashOfConfig":"18"},{"size":972,"mtime":1613744354091,"results":"27","hashOfConfig":"18"},{"size":4553,"mtime":1613742514219,"results":"28","hashOfConfig":"18"},{"size":5344,"mtime":1613484048891,"results":"29","hashOfConfig":"18"},{"size":5807,"mtime":1613434223864,"results":"30","hashOfConfig":"18"},{"size":6819,"mtime":1613767146826,"results":"31","hashOfConfig":"18"},{"size":3531,"mtime":1613745952028,"results":"32","hashOfConfig":"18"},{"size":3250,"mtime":1613767923770,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1qjkfzm",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/amintiti/Desktop/bricole/src/index.js",[],["76","77"],"/Users/amintiti/Desktop/bricole/src/App.js",[],"/Users/amintiti/Desktop/bricole/src/reportWebVitals.js",[],"/Users/amintiti/Desktop/bricole/src/components/layout/Footer.jsx",["78"],"import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Grid from \"@material-ui/core/Grid\";\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n  container: {\n    // position: \"absolute\",\n    // bottom: \"0\",\n    background: \" #000000\",\n    display: \"flex\",\n\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"300px\",\n    justifyContent: \"space-around\",\n  },\n});\n\nfunction Footer() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  return (\n    <Container className={classes.container} maxWidth=\"m\">\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Footer;\n","/Users/amintiti/Desktop/bricole/src/components/layout/NavBar.jsx",["79","80","81"],"import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Drawer as MUIDrawer, List } from \"@material-ui/core\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useHistory } from \"react-router\";\n\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { UserContext } from \"../../context/UserContextProvider\";\n\nimport ArrowBackTwoToneIcon from \"@material-ui/icons/ArrowBackTwoTone\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nimport InfoIcon from \"@material-ui/icons/Info\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: \"#ffa600\",\n    fontWeight: \"bold\",\n    fontSize: \"30px\",\n  },\n  appbar: {\n    background: \"white\",\n  },\n  wrapper: {\n    height: \"10%\",\n    background: \"red\",\n  },\n  meniIcon: {\n    color: \"black\",\n  },\n  link: {\n    textDecoration: \" none\",\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n  const [toggle, setToggle] = useState(false);\n  const { user, handelLogOut, getCollection, profilData } = useContext(\n    UserContext\n  );\n  const history = useHistory();\n\n  const clickhandler = () => {\n    if (user) {\n      getCollection(user.uid);\n      console.log(user);\n    }\n  };\n\n  const ItemList = [\n    {\n      text: (\n        <Link to=\"/\" className={classes.link}>\n          Home\n        </Link>\n      ),\n      icon: <DashboardIcon />,\n    },\n\n    {\n      text: (\n        <Link\n          to=\"profilDisabled\"\n          className={classes.link}\n          onClick={clickhandler}\n        >\n          Profil\n        </Link>\n      ),\n      icon: <AccountCircleIcon />,\n    },\n    {\n      text: (\n        <Link to=\"/UserPage\" className={classes.link}>\n          Dashboard\n        </Link>\n      ),\n      icon: <DashboardIcon />,\n    },\n\n    {\n      text: \"Inbox\",\n      icon: <MailIcon />,\n    },\n    {\n      text: \"Contacts\",\n      icon: <ContactsIcon />,\n    },\n    {\n      text: \"AboutUs\",\n      icon: <InfoIcon />,\n    },\n    {\n      text: \"Back\",\n      icon: <ArrowBackTwoToneIcon onClick={(e) => setToggle(false)} />,\n    },\n  ];\n\n  const logOut = () => {\n    handelLogOut();\n  };\n\n  const singInSingOut = () => {\n    if (user) {\n      return (\n        <Button onClick={logOut}>\n          <Link to=\"/\"> Log out </Link>\n        </Button>\n      );\n    } else {\n      return (\n        <Button>\n          <Link to=\"/login\"> Sign In</Link>\n        </Button>\n      );\n    }\n  };\n\n  const NavBar = () => {\n    if (user) {\n      return (\n        <div className={classes.wrapper}>\n          <AppBar position=\"static\" className={classes.appbar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={(e) => setToggle(true)}\n              >\n                <MenuIcon className={classes.meniIcon} />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Bricole\n              </Typography>\n\n              <Button color=\"inherit\">Login</Button>\n              {singInSingOut()}\n            </Toolbar>\n          </AppBar>\n\n          {/* Drawer */}\n          <MUIDrawer open={toggle} anchor={\"top\"}>\n            <List>\n              {ItemList.map((item, index) => {\n                const { text, icon } = item;\n                return (\n                  <ListItem button key={text}>\n                    {icon && <ListItemIcon>{icon}</ListItemIcon>}\n                    <ListItemText primary={text} />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </MUIDrawer>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.wrapper}>\n          <AppBar position=\"static\" className={classes.appbar}>\n            <Toolbar>\n              <Typography variant=\"h6\" className={classes.title}>\n                Bricole\n              </Typography>\n              {singInSingOut()}\n            </Toolbar>\n          </AppBar>\n        </div>\n      );\n    }\n  };\n\n  return <div>{NavBar()}</div>;\n}\n\nexport default Navbar;\n","/Users/amintiti/Desktop/bricole/src/components/Login.jsx",["82","83","84"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { UserContext } from \"../context/UserContextProvider\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n  btnLink: {\n    padding: \"5px 5px\",\n  },\n}));\n\nfunction Login() {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const {\n    handelSingIn,\n    setEmail,\n    myPassword,\n    setMyPassword,\n    eml,\n    Changes,\n  } = useContext(UserContext);\n\n  const onSubmit = (data, e) => {\n    handelSingIn();\n    Changes();\n  };\n\n  useEffect(() => {\n    Changes();\n  }, [onSubmit]);\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <h1> Bricole </h1>\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Box>\n            <TextField\n              value={eml}\n              onChange={(e) => setEmail(e.target.value)}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"email\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              inputRef={register({\n                required: true,\n                pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i },\n              })}\n            />\n            {errors.email && (\n              <div className={classes.error}> Invalid Email </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              value={myPassword}\n              onChange={(e) => setMyPassword(e.target.value)}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              inputRef={register({ required: true, minLength: 7 })}\n            />\n            {errors.password && (\n              <div className={classes.error}>\n                Password is required (8 Caracters)\n              </div>\n            )}\n          </Box>\n          <Box className={classes.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              SingIn\n            </Button>\n            <Link to=\"SingUp\" className={classes.btnLink}>\n              Create your Bricole Account{\" \"}\n            </Link>\n          </Box>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Login;\n","/Users/amintiti/Desktop/bricole/src/components/SingUp.jsx",["85","86","87","88"],"import React, { useRef, useContext, useState } from \"react\";\nimport { UserContext } from \"../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField } from \"@material-ui/core\";\n\nimport { Container } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  label: {\n    padding: \"5px 5px\",\n  },\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"10px 10px\",\n  },\n  box: {\n    margin: \"10px 10px\",\n  },\n}));\n\nfunction SingUp() {\n  const [passwordCheck, setPasswordcheck] = useState(\"\");\n  const classes = useStyles();\n  const { register, handleSubmit, errors, watch } = useForm();\n  const {\n    handelSingUp,\n    setEmail,\n    myPassword,\n    setMyPassword,\n    eml,\n    user,\n  } = useContext(UserContext);\n  const history = useHistory();\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const onSubmit = (data, e) => {\n    // Test only\n    if (myPassword == data.password) {\n      handelSingUp();\n      e.target.reset();\n      history.push(\"/Profil\");\n    }\n  };\n\n  return (\n    <div>\n      <Container className={classes.container} maxWidth=\"sm\">\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-between\"\n          alignItems=\"stretch\"\n        >\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Box className={classes.box}>\n              <TextField\n                value={eml}\n                onChange={(e) => setEmail(e.target.value)}\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"email\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                inputRef={register({\n                  required: true,\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  },\n                })}\n              />\n              {errors.email && (\n                <div className={classes.error}> Invalid Email </div>\n              )}\n            </Box>\n\n            <Box className={classes.box}>\n              <TextField\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                inputRef={register({ required: true, minLength: 8 })}\n              />\n              {errors.passwordpass && (\n                <div className={classes.error}>\n                  {\" \"}\n                  Password is required (8 Caracters)\n                </div>\n              )}\n            </Box>\n            <Box className={classes.box}>\n              <TextField\n                className={classes.TextField}\n                id=\"inputPassword\"\n                label=\"Confrime Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password_repeat\"\n                inputRef={register({\n                  validate: (value) =>\n                    value === password.current || \"The passwords do not match\",\n                })}\n                value={myPassword}\n                onChange={(e) => setMyPassword(e.target.value)}\n              />\n              {errors.password_repeat && (\n                <div className={classes.error}>\n                  {errors.password_repeat.message}\n                </div>\n              )}\n            </Box>\n            <Box className={classes.btnBox}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                SingUp\n              </Button>\n            </Box>\n          </form>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default SingUp;\n","/Users/amintiti/Desktop/bricole/src/context/UserContextProvider.js",["89","90","91","92","93","94"],"import React, { createContext, useState, useEffect } from \"react\";\nimport fire from \"../components/config/fire\";\nimport { useHistory } from \"react-router\";\n\nexport const UserContext = createContext({});\n\nfunction UserContextProvider({ children }) {\n  const [user, setUser] = useState(\"\");\n  const [eml, setEmail] = useState(\"\");\n  const [myPassword, setMyPassword] = useState(\"\");\n  const [profil, setprofil] = useState({});\n  const [profilData, setprofilData] = useState(\"\");\n  const [ads, setUserAds] = useState([]);\n  const [userCollection, setuserCollection] = useState([]);\n  let tempDoc = [];\n  let tempDocUsers = [];\n  const history = useHistory();\n\n  const handelSingUp = () =>\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(eml, myPassword)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email.already-in-use\":\n          case \"auth-invalid.email\":\n            alert(err.message);\n            break;\n          case \"auth/weak-password\":\n            alert(err.message);\n            break;\n        }\n      });\n\n  const handelSingIn = () =>\n    fire\n      .auth()\n      .signInWithEmailAndPassword(eml, myPassword)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            return alert(err.message);\n\n            break;\n          case \"auth/wrong-password\":\n          case \"auth/wrong-password\":\n            return alert(err.message);\n            break;\n        }\n      });\n\n  const handelLogOut = () => {\n    fire.auth().signOut();\n  };\n\n  const CreateCollection = (data) => {\n    if (user) {\n      const newdata = {\n        Company: data.Company,\n        Profession: data.Profession,\n        email: data.email,\n        adress: data.adress,\n        city: data.city,\n        firstname: data.firstname,\n        lastname: data.lastname,\n        id: user.uid,\n      };\n      fire.firestore().collection(\"users\").doc(user.uid).set({ newdata });\n    }\n  };\n\n  const getCollection = async (userId) => {\n    await fire\n      .firestore()\n      .collection(\"users\")\n      .doc(userId)\n      .get()\n      .then((doc) => {\n        setprofilData(doc.data());\n      });\n  };\n\n  const Changes = () => {\n    if (user) {\n      let documentRef = fire.firestore().collection(\"users\").doc(user.uid);\n      documentRef.get().then((documentSnapshot) => {\n        if (documentSnapshot.exists) {\n          history.push(\"/UserPage\");\n        }\n      });\n    }\n  };\n\n  const getAd = async (data) => {\n    const file = data.image[0];\n    const storagRef = fire.storage().ref();\n    const fileRef = storagRef.child(data.image[0].name);\n    await fileRef.put(data.image[0]);\n    const fileUrl = await fileRef.getDownloadURL();\n\n    const payload = {\n      titel: data.titel,\n      Price: data.price,\n      avatar: fileUrl,\n      profession: data.Profession,\n      description: data.description,\n      id: user.uid,\n    };\n\n    await fire.firestore().collection(\"advertising\").add({ payload });\n    await getDataAds();\n    await getAllUsers();\n  };\n\n  const getDataAds = async () => {\n    await fire\n      .firestore()\n      .collection(\"advertising\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc, key) => {\n          // doc.data() is never undefined for query doc snapshots => Notice\n          let payload = {\n            adsId: doc.id,\n            Price: doc.data().payload.Price,\n            avatar: doc.data().payload.avatar,\n            description: doc.data().payload.description,\n            profession: doc.data().payload.profession,\n            id: doc.data().payload.id,\n            titel: doc.data().payload.titel,\n          };\n          console.log(payload);\n          tempDoc.push({ ...payload });\n        });\n        setUserAds(tempDoc);\n      });\n  };\n\n  const getAllUsers = async () => {\n    await fire\n      .firestore()\n      .collection(\"users\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          tempDocUsers.push({ ...doc.data().newdata });\n        });\n        setuserCollection(tempDocUsers);\n      });\n  };\n\n  const authListnner = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(user);\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListnner();\n  }, []);\n\n  const deleteData = (data) => {\n    if (data) {\n      fire.firestore().collection(\"advertising\").doc(data).delete();\n    }\n  };\n  return (\n    <UserContext.Provider\n      value={{\n        tempDoc,\n        user,\n        ads,\n        setUser,\n        eml,\n        setEmail,\n        myPassword,\n        setMyPassword,\n        handelSingUp,\n        handelSingIn,\n        handelLogOut,\n        authListnner,\n        CreateCollection,\n        profil,\n        setprofil,\n        getCollection,\n        profilData,\n        Changes,\n        getAd,\n        getAllUsers,\n        getDataAds,\n        tempDocUsers,\n        userCollection,\n        deleteData,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport default UserContextProvider;\n","/Users/amintiti/Desktop/bricole/src/components/config/fire.js",[],"/Users/amintiti/Desktop/bricole/src/components/Dashboard.jsx",["95","96","97"],"/Users/amintiti/Desktop/bricole/src/components/user/UserPage.jsx",["98","99","100","101"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Fab, TextField, Button, Box } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CardAdvertesing from \"../layout/CardAdvertesing\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    minHeight: 1000,\n  },\n  containerFab: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"10px 10px\",\n  },\n  containerModal: {\n    background: \"white\",\n    padding: \"10px 10x\",\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  TextField: {\n    padding: \"10px 5px\",\n  },\n  close: {\n    color: \"black\",\n    float: \"right\",\n    padding: \"10px 10px\",\n    fontSize: \"50px\",\n    fontWeight: \"bold\",\n    zIndex: \"1000\",\n  },\n}));\n\nfunction UserPage() {\n  const classes = useStyles();\n  const [handleOpen, SethandleOpen] = useState(null);\n  const { register, handleSubmit, errors } = useForm();\n  const {\n    user,\n    getAd,\n    getDataAds,\n    ads,\n    getCollection,\n    getAllUsers,\n    userCollection,\n  } = useContext(UserContext);\n\n  const clickHandler = () => {\n    SethandleOpen(true);\n  };\n\n  const onSubmit = (data, e) => {\n    getAd(data);\n    data && SethandleOpen(false);\n  };\n\n  useEffect(() => {\n    getAllUsers();\n    getDataAds();\n  }, []);\n\n  let currentUserid = user && user.uid;\n  const currentUser = ads.filter((elm) => {\n    return elm.id == currentUserid;\n  });\n\n  const CurrentUserProfil = userCollection.filter((elm) => {\n    return elm.id == currentUserid;\n  });\n\n  return (\n    <Container className={classes.container} maxWidth=\"m\">\n      <Container maxWidth=\"xs\" className={classes.containerFab}>\n        <Fab type=\"button\" onClick={clickHandler} className={classes.fab}>\n          <AddCircleIcon></AddCircleIcon>\n        </Fab>\n      </Container>\n      <Modal open={handleOpen} className={classes.containerFab}>\n        <Container className={classes.containerModal}>\n          <CloseIcon\n            className={classes.close}\n            onClick={(e) => SethandleOpen(false)}\n          />\n\n          <form\n            className={classes.root}\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Titel\"\n              name=\"titel\"\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Price\"\n              name=\"price\"\n              type=\"number\"\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Profession\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Profession\"\n              name=\"Profession\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.Profession && (\n              <div className={classes.error}> Profession is required </div>\n            )}\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              type=\"file\"\n              name=\"image\"\n              variant=\"outlined\"\n              inputRef={register({ required: true })}\n            />\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Description  \"\n              name=\"description\"\n              multiline\n              rows={8}\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <Box className={classes.containerFab}>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Send\n              </Button>\n            </Box>\n          </form>\n        </Container>\n      </Modal>\n      <CardAdvertesing\n        currentUserAds={currentUser}\n        currentProfil={CurrentUserProfil}\n      />\n    </Container>\n  );\n}\n\nexport default UserPage;\n","/Users/amintiti/Desktop/bricole/src/components/user/Profil.jsx",["102","103","104","105","106","107","108","109"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, TextField, Button, Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n}));\n\nfunction Profil() {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const {\n    user,\n    CreateCollection,\n    profil,\n    setprofil,\n    setprofilData,\n    getCollection,\n    profilData,\n  } = useContext(UserContext);\n\n  const history = useHistory();\n\n  const onSubmit = (data, e) => {\n    CreateCollection(data);\n    history.push(\"/UserPage\");\n    e.target.reset();\n  };\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Firstname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Firstname\"\n              name=\"firstname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.firstname && (\n              <div className={classes.error}> Firstname is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Lastname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Lastname\"\n              name=\"lastname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.lastname && (\n              <div className={classes.error}> Lastname is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"email\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              inputRef={register({\n                required: true,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                },\n              })}\n            />\n            {errors.email && (\n              <div className={classes.error}> Invalid Email </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Profession\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Profession\"\n              name=\"Profession\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.Profession && (\n              <div className={classes.error}> Profession is required </div>\n            )}\n          </Box>\n\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Company\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Company\"\n              name=\"Company\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.company && (\n              <div className={classes.error}> Company name is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"adress\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Adress\"\n              name=\"adress\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.adress && (\n              <div className={classes.error}> The adress is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"City\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"City\"\n              name=\"city\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.city && (\n              <div className={classes.error}> City is required </div>\n            )}\n          </Box>\n          <Box className={classes.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Box>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Profil;\n","/Users/amintiti/Desktop/bricole/src/components/user/ProfilDisabled.jsx",["110","111","112","113","114","115"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, TextField, Button, Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n}));\n\nfunction ProfilDisabled() {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const { profilData, getCollection, user } = useContext(UserContext);\n  const [test, set] = useState(\"\");\n  const history = useHistory();\n\n  const ClickHandler = () => {\n    history.push(\"/profil\");\n  };\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        <form>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.firstname}\n              className={classes.TextField}\n              label=\"Firstname\"\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Firstname\"\n              name=\"firstname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.firstname && (\n              <div className={classes.error}> Firstname is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.lastname}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Lastname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Lastname\"\n              name=\"lastname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.lastname && (\n              <div className={classes.error}> Lastname is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.email}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"email\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              inputRef={register({\n                required: true,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                },\n              })}\n            />\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.Profession}\n              label=\"Profession\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Profession\"\n              name=\"Profession\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.Profession && (\n              <div className={classes.error}> Profession is required </div>\n            )}\n          </Box>\n\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.Company}\n              label=\"Company\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Company\"\n              name=\"Company\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.company && (\n              <div className={classes.error}> Company name is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.adress}\n              label=\"Adress\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Adress\"\n              name=\"adress\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.adress && (\n              <div className={classes.error}> The adress is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.city}\n              label=\"City\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"City\"\n              name=\"city\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.city && (\n              <div className={classes.error}> City is required </div>\n            )}\n          </Box>\n          <Box className={classes.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" onClick={ClickHandler}>\n              Update\n            </Button>\n          </Box>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default ProfilDisabled;\n","/Users/amintiti/Desktop/bricole/src/components/layout/CardAdvertesing.jsx",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport EmailModal from \"./EmailModal\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Fab,\n  TextField,\n  Button,\n  Box,\n  setRef,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { ReportRounded } from \"@material-ui/icons\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport EmailIcon from \"@material-ui/icons/Email\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: \"10px 10px\",\n    // justifyContent: \"center\",\n  },\n  root: {\n    width: \"345px\",\n    margin: \"1% 1%\",\n    backgroundColor: \" #f7f0f0\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    marginLeft: \"auto\",\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red,\n  },\n  delete: {\n    color: \" red\",\n    objectFit: \"contain\",\n  },\n  DetailsIcon: {\n    color: \"blue\",\n    zIndex: 1000,\n  },\n  price: {\n    color: \"green\",\n  },\n  Typography: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nfunction CardAdvertesing({\n  currentUserAds,\n  allUsersAds,\n  currentProfil,\n  homePageUser,\n}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [userData, setUserData] = useState(\"\");\n\n  const {\n    user,\n    getCollection,\n    userCollection,\n    profilData,\n    deleteData,\n    getDataAds,\n  } = useContext(UserContext);\n\n  const DeleteHandler = async (e) => {\n    const id = e.currentTarget.getAttribute(\"data-del\");\n    if (id) {\n      await deleteData(id);\n      await getDataAds();\n    }\n  };\n\n  const idHandler = (e) => {\n    const id = e.currentTarget.getAttribute(\"data-id\");\n    id && getCollection(id);\n  };\n\n  console.log(profilData && profilData);\n\n  const DisplayCard = () => {\n    if (currentUserAds) {\n      return (\n        <Container className={classes.wrapper} maxWidth=\"m\">\n          {currentUserAds.map((item, index) => {\n            return (\n              <Card className={classes.root} key={index}>\n                <CardHeader\n                  title={item.profession}\n                  subheader={currentProfil && currentProfil[0].Company}\n                />\n\n                <CardMedia\n                  className={classes.media}\n                  image={item.avatar}\n                  title=\"\"\n                />\n                <CardContent>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    className={classes.Typography}\n                  >\n                    <span\n                      className={classes.price}\n                    >{`${item.Price} Kr/tim`}</span>\n                    {item.titel}\n                  </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                  <IconButton aria-label=\"More Details\">\n                    <Link\n                      to={{\n                        pathname: \"/detailspage\",\n                        state: {\n                          item,\n                        },\n                      }}\n                    >\n                      <DetailsIcon className={classes.DetailsIcon} />\n                    </Link>\n                  </IconButton>\n\n                  <IconButton className={classes.expand}>\n                    <DeleteIcon\n                      data-del={item.adsId}\n                      onClick={DeleteHandler}\n                      className={classes.delete}\n                    />\n                  </IconButton>\n                </CardActions>\n              </Card>\n            );\n          })}\n        </Container>\n      );\n    } else if (allUsersAds) {\n      return (\n        <Container className={classes.wrapper} maxWidth=\"m\">\n          {allUsersAds.map((item, index) => {\n            return (\n              <Card className={classes.root} key={index}>\n                <CardHeader\n                  title={item.profession}\n                  subheader={profilData && profilData.newdata.Company}\n                />\n\n                <CardMedia\n                  className={classes.media}\n                  image={item.avatar}\n                  title={item.id}\n                />\n                <CardContent>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    className={classes.Typography}\n                  >\n                    <span\n                      className={classes.price}\n                    >{`${item.Price} Kr/tim`}</span>\n                    {item.titel}\n                  </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                  <IconButton aria-label=\"More Details\">\n                    <Link\n                      to={{\n                        pathname: \"/detailspage\",\n                        state: {\n                          item,\n                        },\n                      }}\n                      data-id={item.id}\n                      onClick={idHandler}\n                    >\n                      <DetailsIcon className={classes.DetailsIcon} />\n                    </Link>\n                  </IconButton>\n\n                  <IconButton aria-label=\"More Details\">\n                    <div>\n                      <EmailModal\n                        className={classes.DetailsIcon}\n                        userId={item.id}\n                      />\n                    </div>\n                  </IconButton>\n\n                  <Button color=\"primary\">Reservation</Button>\n                </CardActions>\n              </Card>\n            );\n          })}\n        </Container>\n      );\n    }\n  };\n  return <> {DisplayCard()} </>;\n}\n\nexport default CardAdvertesing;\n","/Users/amintiti/Desktop/bricole/src/components/DetailsPage.jsx",["137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"/Users/amintiti/Desktop/bricole/src/components/layout/EmailModal.jsx",["151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":24,"column":5,"nodeType":"158","messageId":"159","endLine":24,"endColumn":19},{"ruleId":"160","severity":1,"message":"161","line":26,"column":8,"nodeType":"162","messageId":"163","endLine":26,"endColumn":16},{"ruleId":"160","severity":1,"message":"164","line":60,"column":46,"nodeType":"162","messageId":"163","endLine":60,"endColumn":56},{"ruleId":"160","severity":1,"message":"165","line":63,"column":9,"nodeType":"162","messageId":"163","endLine":63,"endColumn":16},{"ruleId":"160","severity":1,"message":"166","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"167","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":63,"column":6,"nodeType":"170","endLine":63,"endColumn":16,"suggestions":"171"},{"ruleId":"160","severity":1,"message":"172","line":43,"column":10,"nodeType":"162","messageId":"163","endLine":43,"endColumn":23},{"ruleId":"160","severity":1,"message":"173","line":43,"column":25,"nodeType":"162","messageId":"163","endLine":43,"endColumn":41},{"ruleId":"160","severity":1,"message":"174","line":52,"column":5,"nodeType":"162","messageId":"163","endLine":52,"endColumn":9},{"ruleId":"175","severity":1,"message":"176","line":61,"column":20,"nodeType":"177","messageId":"159","endLine":61,"endColumn":22},{"ruleId":"178","severity":1,"message":"179","line":24,"column":9,"nodeType":"180","messageId":"181","endLine":32,"endColumn":10},{"ruleId":"178","severity":1,"message":"179","line":40,"column":9,"nodeType":"180","messageId":"181","endLine":51,"endColumn":10},{"ruleId":"182","severity":1,"message":"183","line":46,"column":13,"nodeType":"184","messageId":"185","endLine":46,"endColumn":19},{"ruleId":"186","severity":1,"message":"187","line":48,"column":11,"nodeType":"188","messageId":"159","endLine":50,"endColumn":19},{"ruleId":"182","severity":1,"message":"183","line":50,"column":13,"nodeType":"184","messageId":"185","endLine":50,"endColumn":19},{"ruleId":"160","severity":1,"message":"189","line":97,"column":11,"nodeType":"162","messageId":"163","endLine":97,"endColumn":15},{"ruleId":"160","severity":1,"message":"190","line":24,"column":5,"nodeType":"162","messageId":"163","endLine":24,"endColumn":19},{"ruleId":"160","severity":1,"message":"164","line":25,"column":5,"nodeType":"162","messageId":"163","endLine":25,"endColumn":15},{"ruleId":"168","severity":1,"message":"191","line":31,"column":6,"nodeType":"170","endLine":31,"endColumn":8,"suggestions":"192"},{"ruleId":"160","severity":1,"message":"193","line":52,"column":5,"nodeType":"162","messageId":"163","endLine":52,"endColumn":18},{"ruleId":"168","severity":1,"message":"191","line":69,"column":6,"nodeType":"170","endLine":69,"endColumn":8,"suggestions":"194"},{"ruleId":"175","severity":1,"message":"176","line":73,"column":19,"nodeType":"177","messageId":"159","endLine":73,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":77,"column":19,"nodeType":"177","messageId":"159","endLine":77,"endColumn":21},{"ruleId":"160","severity":1,"message":"166","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"195","line":1,"column":39,"nodeType":"162","messageId":"163","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"174","line":38,"column":5,"nodeType":"162","messageId":"163","endLine":38,"endColumn":9},{"ruleId":"160","severity":1,"message":"196","line":40,"column":5,"nodeType":"162","messageId":"163","endLine":40,"endColumn":11},{"ruleId":"160","severity":1,"message":"197","line":41,"column":5,"nodeType":"162","messageId":"163","endLine":41,"endColumn":14},{"ruleId":"160","severity":1,"message":"198","line":42,"column":5,"nodeType":"162","messageId":"163","endLine":42,"endColumn":18},{"ruleId":"160","severity":1,"message":"193","line":43,"column":5,"nodeType":"162","messageId":"163","endLine":43,"endColumn":18},{"ruleId":"160","severity":1,"message":"164","line":44,"column":5,"nodeType":"162","messageId":"163","endLine":44,"endColumn":15},{"ruleId":"160","severity":1,"message":"195","line":1,"column":39,"nodeType":"162","messageId":"163","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"199","line":38,"column":21,"nodeType":"162","messageId":"163","endLine":38,"endColumn":33},{"ruleId":"160","severity":1,"message":"193","line":39,"column":23,"nodeType":"162","messageId":"163","endLine":39,"endColumn":36},{"ruleId":"160","severity":1,"message":"174","line":39,"column":38,"nodeType":"162","messageId":"163","endLine":39,"endColumn":42},{"ruleId":"160","severity":1,"message":"200","line":40,"column":10,"nodeType":"162","messageId":"163","endLine":40,"endColumn":14},{"ruleId":"160","severity":1,"message":"201","line":40,"column":16,"nodeType":"162","messageId":"163","endLine":40,"endColumn":19},{"ruleId":"160","severity":1,"message":"195","line":1,"column":39,"nodeType":"162","messageId":"163","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"202","line":1,"column":50,"nodeType":"162","messageId":"163","endLine":1,"endColumn":56},{"ruleId":"160","severity":1,"message":"203","line":8,"column":3,"nodeType":"162","messageId":"163","endLine":8,"endColumn":6},{"ruleId":"160","severity":1,"message":"204","line":9,"column":3,"nodeType":"162","messageId":"163","endLine":9,"endColumn":12},{"ruleId":"160","severity":1,"message":"205","line":11,"column":3,"nodeType":"162","messageId":"163","endLine":11,"endColumn":6},{"ruleId":"160","severity":1,"message":"206","line":12,"column":3,"nodeType":"162","messageId":"163","endLine":12,"endColumn":9},{"ruleId":"160","severity":1,"message":"207","line":14,"column":8,"nodeType":"162","messageId":"163","endLine":14,"endColumn":12},{"ruleId":"160","severity":1,"message":"208","line":20,"column":8,"nodeType":"162","messageId":"163","endLine":20,"endColumn":16},{"ruleId":"160","severity":1,"message":"209","line":21,"column":8,"nodeType":"162","messageId":"163","endLine":21,"endColumn":14},{"ruleId":"160","severity":1,"message":"210","line":25,"column":8,"nodeType":"162","messageId":"163","endLine":25,"endColumn":20},{"ruleId":"160","severity":1,"message":"211","line":26,"column":8,"nodeType":"162","messageId":"163","endLine":26,"endColumn":17},{"ruleId":"160","severity":1,"message":"212","line":27,"column":8,"nodeType":"162","messageId":"163","endLine":27,"endColumn":22},{"ruleId":"160","severity":1,"message":"213","line":28,"column":8,"nodeType":"162","messageId":"163","endLine":28,"endColumn":20},{"ruleId":"160","severity":1,"message":"214","line":30,"column":10,"nodeType":"162","messageId":"163","endLine":30,"endColumn":23},{"ruleId":"160","severity":1,"message":"215","line":32,"column":8,"nodeType":"162","messageId":"163","endLine":32,"endColumn":17},{"ruleId":"160","severity":1,"message":"216","line":84,"column":10,"nodeType":"162","messageId":"163","endLine":84,"endColumn":18},{"ruleId":"160","severity":1,"message":"217","line":84,"column":20,"nodeType":"162","messageId":"163","endLine":84,"endColumn":31},{"ruleId":"160","severity":1,"message":"218","line":85,"column":10,"nodeType":"162","messageId":"163","endLine":85,"endColumn":18},{"ruleId":"160","severity":1,"message":"219","line":85,"column":20,"nodeType":"162","messageId":"163","endLine":85,"endColumn":31},{"ruleId":"160","severity":1,"message":"174","line":88,"column":5,"nodeType":"162","messageId":"163","endLine":88,"endColumn":9},{"ruleId":"160","severity":1,"message":"190","line":90,"column":5,"nodeType":"162","messageId":"163","endLine":90,"endColumn":19},{"ruleId":"160","severity":1,"message":"166","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"195","line":1,"column":39,"nodeType":"162","messageId":"163","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"203","line":6,"column":3,"nodeType":"162","messageId":"163","endLine":6,"endColumn":6},{"ruleId":"160","severity":1,"message":"204","line":7,"column":3,"nodeType":"162","messageId":"163","endLine":7,"endColumn":12},{"ruleId":"160","severity":1,"message":"220","line":8,"column":3,"nodeType":"162","messageId":"163","endLine":8,"endColumn":9},{"ruleId":"160","severity":1,"message":"206","line":10,"column":3,"nodeType":"162","messageId":"163","endLine":10,"endColumn":9},{"ruleId":"160","severity":1,"message":"208","line":18,"column":8,"nodeType":"162","messageId":"163","endLine":18,"endColumn":16},{"ruleId":"160","severity":1,"message":"209","line":19,"column":8,"nodeType":"162","messageId":"163","endLine":19,"endColumn":14},{"ruleId":"160","severity":1,"message":"212","line":25,"column":8,"nodeType":"162","messageId":"163","endLine":25,"endColumn":22},{"ruleId":"160","severity":1,"message":"213","line":26,"column":8,"nodeType":"162","messageId":"163","endLine":26,"endColumn":20},{"ruleId":"160","severity":1,"message":"221","line":27,"column":8,"nodeType":"162","messageId":"163","endLine":27,"endColumn":18},{"ruleId":"160","severity":1,"message":"214","line":28,"column":10,"nodeType":"162","messageId":"163","endLine":28,"endColumn":23},{"ruleId":"160","severity":1,"message":"222","line":29,"column":8,"nodeType":"162","messageId":"163","endLine":29,"endColumn":19},{"ruleId":"160","severity":1,"message":"215","line":30,"column":8,"nodeType":"162","messageId":"163","endLine":30,"endColumn":17},{"ruleId":"160","severity":1,"message":"203","line":6,"column":21,"nodeType":"162","messageId":"163","endLine":6,"endColumn":24},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-dupe-keys","Duplicate key 'justifyContent'.","ObjectExpression","unexpected","no-unused-vars","'HomeIcon' is defined but never used.","Identifier","unusedVar","'profilData' is assigned a value but never used.","'history' is assigned a value but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Changes'. Either include it or remove the dependency array.","ArrayExpression",["225"],"'passwordCheck' is assigned a value but never used.","'setPasswordcheck' is assigned a value but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-duplicate-case","Duplicate case label.","SwitchCase","'file' is assigned a value but never used.","'userCollection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllUsers' and 'getDataAds'. Either include them or remove the dependency array.",["226"],"'getCollection' is assigned a value but never used.",["227"],"'useEffect' is defined but never used.","'profil' is assigned a value but never used.","'setprofil' is assigned a value but never used.","'setprofilData' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'test' is assigned a value but never used.","'set' is assigned a value but never used.","'useRef' is defined but never used.","'Fab' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'setRef' is defined but never used.","'clsx' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'ReportRounded' is defined but never used.","'EmailIcon' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'Button' is defined but never used.","'DeleteIcon' is defined but never used.","'DetailsIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"230","fix":"232"},"Update the dependencies array to be: [Changes, onSubmit]",{"range":"233","text":"234"},"Update the dependencies array to be: [getAllUsers, getDataAds]",{"range":"235","text":"236"},{"range":"237","text":"236"},[1393,1403],"[Changes, onSubmit]",[709,711],"[getAllUsers, getDataAds]",[1610,1612]]