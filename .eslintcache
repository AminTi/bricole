[{"/Users/amintiti/Desktop/bricole/src/index.js":"1","/Users/amintiti/Desktop/bricole/src/App.js":"2","/Users/amintiti/Desktop/bricole/src/reportWebVitals.js":"3","/Users/amintiti/Desktop/bricole/src/components/layout/Footer.jsx":"4","/Users/amintiti/Desktop/bricole/src/components/layout/NavBar.jsx":"5","/Users/amintiti/Desktop/bricole/src/components/CreateUser.jsx":"6","/Users/amintiti/Desktop/bricole/src/components/Login.jsx":"7","/Users/amintiti/Desktop/bricole/src/components/SingUp.jsx":"8","/Users/amintiti/Desktop/bricole/src/context/UserContextProvider.js":"9","/Users/amintiti/Desktop/bricole/src/components/config/fire.js":"10","/Users/amintiti/Desktop/bricole/src/components/Dashboard.jsx":"11","/Users/amintiti/Desktop/bricole/src/components/user/UserPage.jsx":"12","/Users/amintiti/Desktop/bricole/src/components/user/Profil.jsx":"13"},{"size":717,"mtime":1612479350590,"results":"14","hashOfConfig":"15"},{"size":1086,"mtime":1612801746601,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1610455715048,"results":"17","hashOfConfig":"15"},{"size":2665,"mtime":1610988757717,"results":"18","hashOfConfig":"15"},{"size":4829,"mtime":1612859536328,"results":"19","hashOfConfig":"15"},{"size":6259,"mtime":1612532934902,"results":"20","hashOfConfig":"15"},{"size":3542,"mtime":1612801714615,"results":"21","hashOfConfig":"15"},{"size":4300,"mtime":1612559655602,"results":"22","hashOfConfig":"15"},{"size":2759,"mtime":1612871252546,"results":"23","hashOfConfig":"15"},{"size":430,"mtime":1612867250319,"results":"24","hashOfConfig":"15"},{"size":412,"mtime":1612541240825,"results":"25","hashOfConfig":"15"},{"size":2730,"mtime":1612863585773,"results":"26","hashOfConfig":"15"},{"size":4633,"mtime":1612863344083,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qjkfzm",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"/Users/amintiti/Desktop/bricole/src/index.js",[],["58","59"],"/Users/amintiti/Desktop/bricole/src/App.js",["60","61"],"/Users/amintiti/Desktop/bricole/src/reportWebVitals.js",[],"/Users/amintiti/Desktop/bricole/src/components/layout/Footer.jsx",["62"],"import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Grid from \"@material-ui/core/Grid\";\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n  container: {\n    background: \" black\",\n    display: \"flex\",\n\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"300px\",\n    justifyContent: \"space-around\",\n  },\n});\n\nfunction Footer() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  return (\n    <Container className={classes.container} maxWidth=\"m\">\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Footer;\n","/Users/amintiti/Desktop/bricole/src/components/layout/NavBar.jsx",["63","64","65"],"/Users/amintiti/Desktop/bricole/src/components/CreateUser.jsx",[],"/Users/amintiti/Desktop/bricole/src/components/Login.jsx",["66","67","68","69","70"],"/Users/amintiti/Desktop/bricole/src/components/SingUp.jsx",["71","72","73"],"import React, { useRef, useContext, useState } from \"react\";\nimport { UserContext } from \"../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField } from \"@material-ui/core\";\n\nimport { Container } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  label: {\n    padding: \"5px 5px\",\n  },\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"10px 10px\",\n  },\n  box: {\n    margin: \"10px 10px\",\n  },\n}));\n\nfunction SingUp() {\n  const [passwordCheck, setPasswordcheck] = useState(\"\");\n  const classes = useStyles();\n  const { register, handleSubmit, errors, watch } = useForm();\n  const { handelSingUp, setEmail, myPassword, setMyPassword, eml } = useContext(\n    UserContext\n  );\n  const history = useHistory();\n\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const onSubmit = (data, e) => {\n    if (myPassword == data.password) {\n      handelSingUp();\n      e.target.reset();\n      history.push(\"/UserPage\");\n    }\n  };\n\n  return (\n    <div>\n      <Container className={classes.container} maxWidth=\"sm\">\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-between\"\n          alignItems=\"stretch\"\n        >\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Box className={classes.box}>\n              <TextField\n                value={eml}\n                onChange={(e) => setEmail(e.target.value)}\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"email\"\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                inputRef={register({\n                  required: true,\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  },\n                })}\n              />\n              {errors.email && (\n                <div className={classes.error}> Invalid Email </div>\n              )}\n            </Box>\n\n            <Box className={classes.box}>\n              <TextField\n                className={classes.TextField}\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                inputRef={register({ required: true, minLength: 8 })}\n              />\n              {errors.passwordpass && (\n                <div className={classes.error}>\n                  {\" \"}\n                  Password is required (8 Caracters)\n                </div>\n              )}\n            </Box>\n            <Box className={classes.box}>\n              <TextField\n                className={classes.TextField}\n                id=\"inputPassword\"\n                label=\"Confrime Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password_repeat\"\n                inputRef={register({\n                  validate: (value) =>\n                    value === password.current || \"The passwords do not match\",\n                })}\n                value={myPassword}\n                onChange={(e) => setMyPassword(e.target.value)}\n              />\n              {errors.password_repeat && (\n                <div className={classes.error}>\n                  {errors.password_repeat.message}\n                </div>\n              )}\n            </Box>\n            <Box className={classes.btnBox}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                SingUp\n              </Button>\n            </Box>\n          </form>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default SingUp;\n","/Users/amintiti/Desktop/bricole/src/context/UserContextProvider.js",["74","75","76","77","78","79","80","81","82","83"],"/Users/amintiti/Desktop/bricole/src/components/config/fire.js",[],"/Users/amintiti/Desktop/bricole/src/components/Dashboard.jsx",[],"/Users/amintiti/Desktop/bricole/src/components/user/UserPage.jsx",["84"],"/Users/amintiti/Desktop/bricole/src/components/user/Profil.jsx",["85","86","87"],"import React, { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, TextField, Button, Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n}));\n\nfunction Profil() {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const {\n    user,\n    CreateCollection,\n    profil,\n    setprofil,\n    getCollection,\n  } = useContext(UserContext);\n\n  const onSubmit = (data) => {\n    setprofil(data);\n  };\n\n  useEffect(() => {\n    if (user) {\n      CreateCollection();\n    }\n  }, [onSubmit]);\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Firstname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Firstname\"\n              name=\"firstname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.firstname && (\n              <div className={classes.error}> Firstname is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Lastname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Lastname\"\n              name=\"lastname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.lastname && (\n              <div className={classes.error}> Lastname is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Profession\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Profession\"\n              name=\"Profession\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.Profession && (\n              <div className={classes.error}> Profession is required </div>\n            )}\n          </Box>\n\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Company\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Company\"\n              name=\"Company\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.company && (\n              <div className={classes.error}> Company name is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"adress\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Adress\"\n              name=\"adress\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.adress && (\n              <div className={classes.error}> The adress is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"City\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"City\"\n              name=\"city\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.city && (\n              <div className={classes.error}> City is required </div>\n            )}\n          </Box>\n          <Box className={classes.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Box>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Profil;\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":18},{"ruleId":"92","severity":1,"message":"96","line":22,"column":9,"nodeType":"94","messageId":"95","endLine":22,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":22,"column":5,"nodeType":"99","messageId":"100","endLine":22,"endColumn":19},{"ruleId":"92","severity":1,"message":"101","line":26,"column":8,"nodeType":"94","messageId":"95","endLine":26,"endColumn":16},{"ruleId":"92","severity":1,"message":"102","line":61,"column":9,"nodeType":"94","messageId":"95","endLine":61,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":190,"column":1,"nodeType":"105","messageId":"106","endLine":196,"endColumn":2},{"ruleId":"92","severity":1,"message":"107","line":54,"column":5,"nodeType":"94","messageId":"95","endLine":54,"endColumn":14},{"ruleId":"92","severity":1,"message":"108","line":55,"column":5,"nodeType":"94","messageId":"95","endLine":55,"endColumn":15},{"ruleId":"92","severity":1,"message":"109","line":57,"column":5,"nodeType":"94","messageId":"95","endLine":57,"endColumn":17},{"ruleId":"92","severity":1,"message":"110","line":58,"column":5,"nodeType":"94","messageId":"95","endLine":58,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":70,"column":6,"nodeType":"113","endLine":70,"endColumn":16,"suggestions":"114"},{"ruleId":"92","severity":1,"message":"115","line":43,"column":10,"nodeType":"94","messageId":"95","endLine":43,"endColumn":23},{"ruleId":"92","severity":1,"message":"116","line":43,"column":25,"nodeType":"94","messageId":"95","endLine":43,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":55,"column":20,"nodeType":"119","messageId":"100","endLine":55,"endColumn":22},{"ruleId":"92","severity":1,"message":"120","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":20},{"ruleId":"92","severity":1,"message":"107","line":9,"column":10,"nodeType":"94","messageId":"95","endLine":9,"endColumn":19},{"ruleId":"92","severity":1,"message":"121","line":9,"column":21,"nodeType":"94","messageId":"95","endLine":9,"endColumn":33},{"ruleId":"92","severity":1,"message":"108","line":14,"column":10,"nodeType":"94","messageId":"95","endLine":14,"endColumn":20},{"ruleId":"92","severity":1,"message":"122","line":15,"column":10,"nodeType":"94","messageId":"95","endLine":15,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":22,"column":9,"nodeType":"125","messageId":"126","endLine":32,"endColumn":10},{"ruleId":"123","severity":1,"message":"124","line":40,"column":9,"nodeType":"125","messageId":"126","endLine":53,"endColumn":10},{"ruleId":"127","severity":1,"message":"128","line":47,"column":13,"nodeType":"129","messageId":"130","endLine":47,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":49,"column":11,"nodeType":"133","messageId":"100","endLine":52,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":52,"column":13,"nodeType":"129","messageId":"130","endLine":52,"endColumn":19},{"ruleId":"92","severity":1,"message":"134","line":45,"column":5,"nodeType":"94","messageId":"95","endLine":45,"endColumn":9},{"ruleId":"92","severity":1,"message":"135","line":39,"column":5,"nodeType":"94","messageId":"95","endLine":39,"endColumn":11},{"ruleId":"92","severity":1,"message":"136","line":41,"column":5,"nodeType":"94","messageId":"95","endLine":41,"endColumn":18},{"ruleId":"111","severity":1,"message":"137","line":52,"column":6,"nodeType":"113","endLine":52,"endColumn":16,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'CreateUser' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","no-dupe-keys","Duplicate key 'justifyContent'.","ObjectExpression","unexpected","'HomeIcon' is defined but never used.","'history' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'userCheck' is assigned a value but never used.","'emailError' is assigned a value but never used.","'authListnner' is assigned a value but never used.","'CreateCollection' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'passwordError', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["141"],"'passwordCheck' is assigned a value but never used.","'setPasswordcheck' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useHistory' is defined but never used.","'setUserCheck' is assigned a value but never used.","'passwordError' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-duplicate-case","Duplicate case label.","SwitchCase","'user' is assigned a value but never used.","'profil' is assigned a value but never used.","'getCollection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CreateCollection' and 'user'. Either include them or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [history, onSubmit, passwordError, user]",{"range":"147","text":"148"},"Update the dependencies array to be: [CreateCollection, onSubmit, user]",{"range":"149","text":"150"},[1581,1591],"[history, onSubmit, passwordError, user]",[1151,1161],"[CreateCollection, onSubmit, user]"]