[{"/Users/amintiti/Desktop/bricole/src/index.js":"1","/Users/amintiti/Desktop/bricole/src/App.js":"2","/Users/amintiti/Desktop/bricole/src/reportWebVitals.js":"3","/Users/amintiti/Desktop/bricole/src/components/layout/Footer.jsx":"4","/Users/amintiti/Desktop/bricole/src/components/layout/NavBar.jsx":"5","/Users/amintiti/Desktop/bricole/src/components/CreateUser.jsx":"6","/Users/amintiti/Desktop/bricole/src/components/Login.jsx":"7","/Users/amintiti/Desktop/bricole/src/components/SingUp.jsx":"8","/Users/amintiti/Desktop/bricole/src/context/UserContextProvider.js":"9","/Users/amintiti/Desktop/bricole/src/components/config/fire.js":"10","/Users/amintiti/Desktop/bricole/src/components/Dashboard.jsx":"11","/Users/amintiti/Desktop/bricole/src/components/user/UserPage.jsx":"12","/Users/amintiti/Desktop/bricole/src/components/user/Profil.jsx":"13","/Users/amintiti/Desktop/bricole/src/components/user/ProfilDisabled.jsx":"14","/Users/amintiti/Desktop/bricole/src/components/layout/CardAdvertesing.jsx":"15"},{"size":717,"mtime":1612957548014,"results":"16","hashOfConfig":"17"},{"size":1226,"mtime":1613083397521,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1610455715048,"results":"19","hashOfConfig":"17"},{"size":2716,"mtime":1613083377871,"results":"20","hashOfConfig":"17"},{"size":4740,"mtime":1612964499885,"results":"21","hashOfConfig":"17"},{"size":6259,"mtime":1612532934902,"results":"22","hashOfConfig":"17"},{"size":3360,"mtime":1613106880126,"results":"23","hashOfConfig":"17"},{"size":4340,"mtime":1613392329397,"results":"24","hashOfConfig":"17"},{"size":4684,"mtime":1613107154702,"results":"25","hashOfConfig":"17"},{"size":430,"mtime":1612867250319,"results":"26","hashOfConfig":"17"},{"size":412,"mtime":1612541240825,"results":"27","hashOfConfig":"17"},{"size":4031,"mtime":1613082737695,"results":"28","hashOfConfig":"17"},{"size":4836,"mtime":1612964243139,"results":"29","hashOfConfig":"17"},{"size":5222,"mtime":1613082296834,"results":"30","hashOfConfig":"17"},{"size":3848,"mtime":1613083520333,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1qjkfzm",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"/Users/amintiti/Desktop/bricole/src/index.js",[],["72","73"],"/Users/amintiti/Desktop/bricole/src/App.js",["74","75","76"],"import \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport NavBar from \"./components/layout/NavBar\";\nimport Footer from \"./components/layout/Footer\";\nimport CreateUser from \"./components/CreateUser\";\nimport Login from \"./components/Login\";\nimport UserPage from \"./components/user/UserPage\";\nimport SingUp from \"./components/SingUp\";\nimport Dashboard from \"./components/Dashboard\";\nimport Profil from \"./components/user/Profil\";\nimport ProfilDisabled from \"./components/user/ProfilDisabled\";\n\nconst useStyles = makeStyles({\n  container: {\n    height: \"100vh\",\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div>\n      <NavBar />\n      <Switch>\n        <Route path=\"/\" exact component={Dashboard} />\n        {/* <Route path=\"/CreateUser\" component={CreateUser} /> */}\n        <Route path=\"/Login\" component={Login} />\n        <Route path=\"/UserPage\" component={UserPage} />\n        <Route path=\"/profil\" component={Profil} />\n        <Route path=\"/SingUp\" component={SingUp} />\n        <Route path=\"/ProfilDisabled\" component={ProfilDisabled} />\n      </Switch>\n      {/* <Footer /> */}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/amintiti/Desktop/bricole/src/reportWebVitals.js",[],"/Users/amintiti/Desktop/bricole/src/components/layout/Footer.jsx",["77"],"import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Grid from \"@material-ui/core/Grid\";\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n  container: {\n    // position: \"absolute\",\n    // bottom: \"0\",\n    background: \" #000000\",\n    display: \"flex\",\n\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"300px\",\n    justifyContent: \"space-around\",\n  },\n});\n\nfunction Footer() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  return (\n    <Container className={classes.container} maxWidth=\"m\">\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\n        </BottomNavigation>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Footer;\n","/Users/amintiti/Desktop/bricole/src/components/layout/NavBar.jsx",["78","79","80"],"import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Drawer as MUIDrawer, List } from \"@material-ui/core\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useHistory } from \"react-router\";\n\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { UserContext } from \"../../context/UserContextProvider\";\n\nimport ArrowBackTwoToneIcon from \"@material-ui/icons/ArrowBackTwoTone\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nimport InfoIcon from \"@material-ui/icons/Info\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: \"#ffa600\",\n    fontWeight: \"bold\",\n    fontSize: \"30px\",\n  },\n  appbar: {\n    background: \"white\",\n  },\n  wrapper: {\n    height: \"10%\",\n    background: \"red\",\n  },\n  meniIcon: {\n    color: \"black\",\n  },\n  link: {\n    textDecoration: \" none\",\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n  const [toggle, setToggle] = useState(false);\n  const { user, handelLogOut, getCollection, profilData } = useContext(\n    UserContext\n  );\n  const history = useHistory();\n\n  const ItemList = [\n    {\n      text: (\n        <Link to=\"/\" className={classes.link}>\n          Home\n        </Link>\n      ),\n      icon: <DashboardIcon />,\n    },\n\n    {\n      text: (\n        <Link\n          to=\"profilDisabled\"\n          className={classes.link}\n          onClick={getCollection}\n        >\n          Profil\n        </Link>\n      ),\n      icon: <AccountCircleIcon />,\n    },\n    {\n      text: (\n        <Link to=\"/UserPage\" className={classes.link}>\n          Dashboard\n        </Link>\n      ),\n      icon: <DashboardIcon />,\n    },\n\n    {\n      text: \"Inbox\",\n      icon: <MailIcon />,\n    },\n    {\n      text: \"Contacts\",\n      icon: <ContactsIcon />,\n    },\n    {\n      text: \"AboutUs\",\n      icon: <InfoIcon />,\n    },\n    {\n      text: \"Back\",\n      icon: <ArrowBackTwoToneIcon onClick={(e) => setToggle(false)} />,\n    },\n  ];\n\n  const logOut = () => {\n    handelLogOut();\n  };\n\n  const singInSingOut = () => {\n    if (user) {\n      return (\n        <Button onClick={logOut}>\n          <Link to=\"/\"> Log out </Link>\n        </Button>\n      );\n    } else {\n      return (\n        <Button>\n          <Link to=\"/login\"> Sign In</Link>\n        </Button>\n      );\n    }\n  };\n\n  const NavBar = () => {\n    if (user) {\n      return (\n        <div className={classes.wrapper}>\n          <AppBar position=\"static\" className={classes.appbar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={(e) => setToggle(true)}\n              >\n                <MenuIcon className={classes.meniIcon} />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Bricole\n              </Typography>\n\n              <Button color=\"inherit\">Login</Button>\n              {singInSingOut()}\n            </Toolbar>\n          </AppBar>\n\n          {/* Drawer */}\n          <MUIDrawer open={toggle} anchor={\"top\"}>\n            <List>\n              {ItemList.map((item, index) => {\n                const { text, icon } = item;\n                return (\n                  <ListItem button key={text}>\n                    {icon && <ListItemIcon>{icon}</ListItemIcon>}\n                    <ListItemText primary={text} />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </MUIDrawer>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.wrapper}>\n          <AppBar position=\"static\" className={classes.appbar}>\n            <Toolbar>\n              <Typography variant=\"h6\" className={classes.title}>\n                Bricole\n              </Typography>\n              {singInSingOut()}\n            </Toolbar>\n          </AppBar>\n        </div>\n      );\n    }\n  };\n\n  return <div>{NavBar()}</div>;\n}\n\nexport default Navbar;\n","/Users/amintiti/Desktop/bricole/src/components/CreateUser.jsx",[],"/Users/amintiti/Desktop/bricole/src/components/Login.jsx",["81","82","83","84"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { UserContext } from \"../context/UserContextProvider\";\nimport { Container, Button } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n  btnLink: {\n    padding: \"5px 5px\",\n  },\n}));\n\nfunction Login() {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const {\n    handelSingIn,\n    setEmail,\n    myPassword,\n    setMyPassword,\n    eml,\n    Changes,\n  } = useContext(UserContext);\n\n  const onSubmit = (data, e) => {\n    handelSingIn();\n    // Changes();\n  };\n\n  useEffect(() => {\n    // Changes();\n  }, [onSubmit]);\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <h1> Bricole </h1>\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Box>\n            <TextField\n              value={eml}\n              onChange={(e) => setEmail(e.target.value)}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"email\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              inputRef={register({\n                required: true,\n                pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i },\n              })}\n            />\n            {errors.email && (\n              <div className={classes.error}> Invalid Email </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              value={myPassword}\n              onChange={(e) => setMyPassword(e.target.value)}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              inputRef={register({ required: true, minLength: 7 })}\n            />\n            {errors.password && (\n              <div className={classes.error}>\n                Password is required (8 Caracters)\n              </div>\n            )}\n          </Box>\n          <Box className={classes.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              SingIn\n            </Button>\n            <Link to=\"SingUp\" className={classes.btnLink}>\n              Create your Bricole Account{\" \"}\n            </Link>\n          </Box>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Login;\n","/Users/amintiti/Desktop/bricole/src/components/SingUp.jsx",["85","86","87","88"],"/Users/amintiti/Desktop/bricole/src/context/UserContextProvider.js",["89","90","91","92","93","94","95","96","97"],"import React, { createContext, useState, useEffect } from \"react\";\nimport fire from \"../components/config/fire\";\nimport { useHistory } from \"react-router\";\nimport { ContactSupportOutlined, FilterOutlined } from \"@material-ui/icons\";\n\nexport const UserContext = createContext({});\n\nfunction UserContextProvider({ children }) {\n  const [user, setUser] = useState(\"\");\n  const [eml, setEmail] = useState(\"\");\n  const [myPassword, setMyPassword] = useState(\"\");\n  const [profil, setprofil] = useState({});\n  const [profilData, setprofilData] = useState(\"\");\n  const [ads, setUserAds] = useState([]);\n  const [userCollection, setuserCollection] = useState([]);\n  let tempDoc = [];\n  let tempDocUsers = [];\n  const history = useHistory();\n\n  const handelSingUp = () =>\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(eml, myPassword)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email.already-in-use\":\n          case \"auth-invalid.email\":\n            alert(err.message);\n            break;\n          case \"auth/weak-password\":\n            alert(err.message);\n            break;\n        }\n      });\n\n  const handelSingIn = () =>\n    fire\n      .auth()\n      .signInWithEmailAndPassword(eml, myPassword)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            return alert(err.message);\n\n            break;\n          case \"auth/wrong-password\":\n          case \"auth/wrong-password\":\n            return alert(err.message);\n            break;\n        }\n      });\n\n  const handelLogOut = () => {\n    fire.auth().signOut();\n  };\n\n  const CreateCollection = (data) => {\n    if (data) {\n      const newdata = {\n        Company: data.Company,\n        Profession: data.Profession,\n        adress: data.adress,\n        city: data.city,\n        firstname: data.firstname,\n        lastname: data.lastname,\n        id: user.uid,\n      };\n      fire.firestore().collection(\"users\").doc(user.uid).set({ newdata });\n    }\n  };\n\n  const getCollection = async () => {\n    await fire\n      .firestore()\n      .collection(\"users\")\n      .doc(user.uid)\n      .get()\n      .then((doc) => {\n        setprofilData(doc.data());\n      });\n  };\n\n  const Changes = () => {\n    if (user) {\n      console.log(fire.auth());\n      // let documentRef = fire.firestore().collection(\"users\").doc(user.uid);\n      // documentRef.get().then((documentSnapshot) => {\n      //   if (documentSnapshot.exists) {\n      //     history.push(\"/UserPage\");\n      //   }\n      // });\n    }\n  };\n  Changes();\n\n  const getAd = async (data) => {\n    const file = data.image[0];\n    const storagRef = fire.storage().ref();\n    const fileRef = storagRef.child(data.image[0].name);\n    await fileRef.put(data.image[0]);\n    const fileUrl = await fileRef.getDownloadURL();\n\n    const payload = {\n      titel: data.titel,\n      Price: data.price,\n      avatar: fileUrl,\n      description: data.description,\n      id: user.uid,\n    };\n\n    await fire.firestore().collection(\"advertising\").add({ payload });\n    await getDataAds();\n    await getAllUsers();\n  };\n\n  const getDataAds = async () => {\n    await fire\n      .firestore()\n      .collection(\"advertising\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc, key) => {\n          // doc.data() is never undefined for query doc snapshots => Notice Amin\n          tempDoc.push({ ...doc.data().payload });\n        });\n        setUserAds(tempDoc);\n      });\n  };\n\n  const getAllUsers = async () => {\n    await fire\n      .firestore()\n      .collection(\"users\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          tempDocUsers.push({ ...doc.data().newdata });\n        });\n        setuserCollection(tempDocUsers);\n      });\n  };\n\n  const authListnner = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(user);\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListnner();\n  }, []);\n\n  return (\n    <UserContext.Provider\n      value={{\n        tempDoc,\n        user,\n        ads,\n        setUser,\n        eml,\n        setEmail,\n        myPassword,\n        setMyPassword,\n        handelSingUp,\n        handelSingIn,\n        handelLogOut,\n        authListnner,\n        CreateCollection,\n        profil,\n        setprofil,\n        getCollection,\n        profilData,\n        Changes,\n        getAd,\n        getAllUsers,\n        getDataAds,\n        tempDocUsers,\n        userCollection,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport default UserContextProvider;\n","/Users/amintiti/Desktop/bricole/src/components/config/fire.js",[],"/Users/amintiti/Desktop/bricole/src/components/Dashboard.jsx",[],"/Users/amintiti/Desktop/bricole/src/components/user/UserPage.jsx",["98","99","100","101","102","103"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Fab, TextField, Button, Box } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CardAdvertesing from \"../layout/CardAdvertesing\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    minHeight: \"100vh\",\n    height: \"100vh\",\n  },\n  containerFab: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"10px 10px\",\n  },\n  containerModal: {\n    background: \"white\",\n    padding: \"10px 10x\",\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  TextField: {\n    padding: \"10px 5px\",\n  },\n  close: {\n    color: \"black\",\n    float: \"right\",\n    padding: \"10px 10px\",\n    fontSize: \"50px\",\n    fontWeight: \"bold\",\n    zIndex: \"1000\",\n  },\n}));\n\nfunction UserPage() {\n  const classes = useStyles();\n  const [handleOpen, SethandleOpen] = useState(null);\n  const { register, handleSubmit, errors } = useForm();\n  const {\n    user,\n    getAd,\n    getDataAds,\n    ads,\n    getCollection,\n    getAllUsers,\n    userCollection,\n  } = useContext(UserContext);\n\n  const clickHandler = () => {\n    SethandleOpen(true);\n  };\n\n  const onSubmit = (data, e) => {\n    getAd(data);\n    data && SethandleOpen(false);\n  };\n\n  useEffect(() => {\n    getAllUsers();\n    getDataAds();\n  }, []);\n\n  let currentUserid = user.uid;\n  const currentUser = ads.filter((elm) => {\n    return elm.id == currentUserid;\n  });\n\n  const allUsers = userCollection.filter((elm) => {\n    return elm.id == currentUserid;\n  });\n\n  console.log(userCollection);\n\n  return (\n    <Container className={classes.container} maxWidth=\"m\">\n      <Container maxWidth=\"xs\" className={classes.containerFab}>\n        <Fab type=\"button\" onClick={clickHandler} className={classes.fab}>\n          <AddCircleIcon></AddCircleIcon>\n        </Fab>\n      </Container>\n      <Modal open={handleOpen} className={classes.containerFab}>\n        <Container className={classes.containerModal}>\n          <CloseIcon\n            className={classes.close}\n            onClick={(e) => SethandleOpen(false)}\n          />\n\n          <form\n            className={classes.root}\n            noValidate\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Titel\"\n              name=\"titel\"\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Price\"\n              name=\"price\"\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              type=\"file\"\n              name=\"image\"\n              variant=\"outlined\"\n              inputRef={register({ required: true })}\n            />\n\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Description  \"\n              name=\"description\"\n              multiline\n              rows={8}\n              variant=\"outlined\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n\n            <Box className={classes.containerFab}>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Send\n              </Button>\n            </Box>\n          </form>\n        </Container>\n      </Modal>\n      <CardAdvertesing currentUserAds={currentUser} />\n    </Container>\n  );\n}\n\nexport default UserPage;\n","/Users/amintiti/Desktop/bricole/src/components/user/Profil.jsx",["104","105","106","107","108","109","110","111"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, TextField, Button, Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n}));\n\nfunction Profil() {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const {\n    user,\n    CreateCollection,\n    profil,\n    setprofil,\n    setprofilData,\n    getCollection,\n    profilData,\n  } = useContext(UserContext);\n\n  const history = useHistory();\n\n  const onSubmit = (data, e) => {\n    CreateCollection(data);\n    history.push(\"/UserPage\");\n    e.target.reset();\n  };\n\n  // useEffect(() => {\n  //   if (user) {\n  //     CreateCollection();\n  //   }\n  // }, [onSubmit]);\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Firstname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Firstname\"\n              name=\"firstname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.firstname && (\n              <div className={classes.error}> Firstname is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Lastname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Lastname\"\n              name=\"lastname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.lastname && (\n              <div className={classes.error}> Lastname is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Profession\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Profession\"\n              name=\"Profession\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.Profession && (\n              <div className={classes.error}> Profession is required </div>\n            )}\n          </Box>\n\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Company\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Company\"\n              name=\"Company\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.company && (\n              <div className={classes.error}> Company name is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"adress\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Adress\"\n              name=\"adress\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.adress && (\n              <div className={classes.error}> The adress is required </div>\n            )}\n          </Box>\n          <Box>\n            <TextField\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"City\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"City\"\n              name=\"city\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.city && (\n              <div className={classes.error}> City is required </div>\n            )}\n          </Box>\n          <Box className={classes.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Box>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Profil;\n","/Users/amintiti/Desktop/bricole/src/components/user/ProfilDisabled.jsx",["112","113","114","115","116","117"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, TextField, Button, Box } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  TextField: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"10px 5px\",\n  },\n  error: {\n    color: \"red\",\n    padding: \"5px 5px\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"10px 10px\",\n  },\n}));\n\nfunction ProfilDisabled() {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const { profilData, getCollection, user } = useContext(UserContext);\n  const [test, set] = useState(\"\");\n  const history = useHistory();\n\n  const ClickHandler = () => {\n    history.push(\"/profil\");\n  };\n\n  return (\n    <Container className={classes.container} maxWidth=\"sm\">\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        <form>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.firstname}\n              className={classes.TextField}\n              label=\"Firstname\"\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Firstname\"\n              name=\"firstname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.firstname && (\n              <div className={classes.error}> Firstname is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.lastname}\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              label=\"Lastname\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Lastname\"\n              name=\"lastname\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.lastname && (\n              <div className={classes.error}> Lastname is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.Profession}\n              label=\"Profession\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Profession\"\n              name=\"Profession\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.Profession && (\n              <div className={classes.error}> Profession is required </div>\n            )}\n          </Box>\n\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.Company}\n              label=\"Company\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Company\"\n              name=\"Company\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.company && (\n              <div className={classes.error}> Company name is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.adress}\n              label=\"Adress\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"Adress\"\n              name=\"adress\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.adress && (\n              <div className={classes.error}> The adress is required </div>\n            )}\n          </Box>\n          <Box>\n            <InputLabel />\n            <TextField\n              value={profilData && profilData.newdata.city}\n              label=\"City\"\n              className={classes.TextField}\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              placeholder=\"City\"\n              name=\"city\"\n              inputRef={register({ required: true, minLength: 2 })}\n            />\n            {errors.city && (\n              <div className={classes.error}> City is required </div>\n            )}\n          </Box>\n          <Box className={classes.btnBox}>\n            <Button variant=\"contained\" color=\"primary\" onClick={ClickHandler}>\n              Update\n            </Button>\n          </Box>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default ProfilDisabled;\n","/Users/amintiti/Desktop/bricole/src/components/layout/CardAdvertesing.jsx",["118","119","120","121","122","123","124","125","126"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../context/UserContextProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Fab, TextField, Button, Box } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: \"10px 10px\",\n    justifyContent: \"center\",\n  },\n  root: {\n    maxWidth: 345,\n    margin: \"1% 1%\",\n    backgroundColor: \" #f7f0f0\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red,\n  },\n}));\n\nfunction CardAdvertesing({ currentUserAds }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const { user, getCollection, profilData } = useContext(UserContext);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  useEffect(() => {}, []);\n  // console.log(profilData);\n\n  // console.log(currentUserAds);\n\n  return (\n    <Container className={classes.wrapper} maxWidth=\"m\">\n      {currentUserAds.map((item, index) => {\n        return (\n          <Card className={classes.root} key={index}>\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                  {/* .slice(0,1); */}\n                </Avatar>\n              }\n              action={\n                <IconButton aria-label=\"settings\">\n                  <MoreVertIcon />\n                </IconButton>\n              }\n              title={item.titel}\n              subheader={`Price ${item.Price}`}\n            />\n            <CardMedia className={classes.media} image={item.avatar} title=\"\" />\n            <CardContent>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                This impressive paella is a perfect party dish and a fun meal to\n                cook together with your guests. Add 1 cup of frozen peas along\n                with the mussels, if you like.\n              </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n              <IconButton aria-label=\"add to favorites\">\n                <FavoriteIcon />\n              </IconButton>\n              <IconButton aria-label=\"share\">\n                <ShareIcon />\n              </IconButton>\n              <IconButton\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded,\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n              >\n                <ExpandMoreIcon />\n              </IconButton>\n            </CardActions>\n          </Card>\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default CardAdvertesing;\n",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":14},{"ruleId":"131","severity":1,"message":"135","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":18},{"ruleId":"131","severity":1,"message":"136","line":23,"column":9,"nodeType":"133","messageId":"134","endLine":23,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":24,"column":5,"nodeType":"139","messageId":"140","endLine":24,"endColumn":19},{"ruleId":"131","severity":1,"message":"141","line":26,"column":8,"nodeType":"133","messageId":"134","endLine":26,"endColumn":16},{"ruleId":"131","severity":1,"message":"142","line":60,"column":46,"nodeType":"133","messageId":"134","endLine":60,"endColumn":56},{"ruleId":"131","severity":1,"message":"143","line":63,"column":9,"nodeType":"133","messageId":"134","endLine":63,"endColumn":16},{"ruleId":"131","severity":1,"message":"144","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"145","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":20},{"ruleId":"131","severity":1,"message":"146","line":53,"column":5,"nodeType":"133","messageId":"134","endLine":53,"endColumn":12},{"ruleId":"147","severity":1,"message":"148","line":56,"column":9,"nodeType":"149","endLine":59,"endColumn":4,"suggestions":"150"},{"ruleId":"131","severity":1,"message":"151","line":43,"column":10,"nodeType":"133","messageId":"134","endLine":43,"endColumn":23},{"ruleId":"131","severity":1,"message":"152","line":43,"column":25,"nodeType":"133","messageId":"134","endLine":43,"endColumn":41},{"ruleId":"131","severity":1,"message":"153","line":52,"column":5,"nodeType":"133","messageId":"134","endLine":52,"endColumn":9},{"ruleId":"154","severity":1,"message":"155","line":61,"column":20,"nodeType":"156","messageId":"140","endLine":61,"endColumn":22},{"ruleId":"131","severity":1,"message":"157","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":32},{"ruleId":"131","severity":1,"message":"158","line":4,"column":34,"nodeType":"133","messageId":"134","endLine":4,"endColumn":48},{"ruleId":"131","severity":1,"message":"143","line":18,"column":9,"nodeType":"133","messageId":"134","endLine":18,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":25,"column":9,"nodeType":"161","messageId":"162","endLine":33,"endColumn":10},{"ruleId":"159","severity":1,"message":"160","line":41,"column":9,"nodeType":"161","messageId":"162","endLine":52,"endColumn":10},{"ruleId":"163","severity":1,"message":"164","line":47,"column":13,"nodeType":"165","messageId":"166","endLine":47,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":49,"column":11,"nodeType":"169","messageId":"140","endLine":51,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":51,"column":13,"nodeType":"165","messageId":"166","endLine":51,"endColumn":19},{"ruleId":"131","severity":1,"message":"170","line":99,"column":11,"nodeType":"133","messageId":"134","endLine":99,"endColumn":15},{"ruleId":"131","severity":1,"message":"171","line":47,"column":35,"nodeType":"133","messageId":"134","endLine":47,"endColumn":41},{"ruleId":"131","severity":1,"message":"172","line":53,"column":5,"nodeType":"133","messageId":"134","endLine":53,"endColumn":18},{"ruleId":"147","severity":1,"message":"173","line":70,"column":6,"nodeType":"174","endLine":70,"endColumn":8,"suggestions":"175"},{"ruleId":"154","severity":1,"message":"155","line":74,"column":19,"nodeType":"156","messageId":"140","endLine":74,"endColumn":21},{"ruleId":"131","severity":1,"message":"176","line":77,"column":9,"nodeType":"133","messageId":"134","endLine":77,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":78,"column":19,"nodeType":"156","messageId":"140","endLine":78,"endColumn":21},{"ruleId":"131","severity":1,"message":"144","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"177","line":1,"column":39,"nodeType":"133","messageId":"134","endLine":1,"endColumn":48},{"ruleId":"131","severity":1,"message":"153","line":38,"column":5,"nodeType":"133","messageId":"134","endLine":38,"endColumn":9},{"ruleId":"131","severity":1,"message":"178","line":40,"column":5,"nodeType":"133","messageId":"134","endLine":40,"endColumn":11},{"ruleId":"131","severity":1,"message":"179","line":41,"column":5,"nodeType":"133","messageId":"134","endLine":41,"endColumn":14},{"ruleId":"131","severity":1,"message":"180","line":42,"column":5,"nodeType":"133","messageId":"134","endLine":42,"endColumn":18},{"ruleId":"131","severity":1,"message":"172","line":43,"column":5,"nodeType":"133","messageId":"134","endLine":43,"endColumn":18},{"ruleId":"131","severity":1,"message":"142","line":44,"column":5,"nodeType":"133","messageId":"134","endLine":44,"endColumn":15},{"ruleId":"131","severity":1,"message":"177","line":1,"column":39,"nodeType":"133","messageId":"134","endLine":1,"endColumn":48},{"ruleId":"131","severity":1,"message":"181","line":38,"column":21,"nodeType":"133","messageId":"134","endLine":38,"endColumn":33},{"ruleId":"131","severity":1,"message":"172","line":39,"column":23,"nodeType":"133","messageId":"134","endLine":39,"endColumn":36},{"ruleId":"131","severity":1,"message":"153","line":39,"column":38,"nodeType":"133","messageId":"134","endLine":39,"endColumn":42},{"ruleId":"131","severity":1,"message":"182","line":40,"column":10,"nodeType":"133","messageId":"134","endLine":40,"endColumn":14},{"ruleId":"131","severity":1,"message":"183","line":40,"column":16,"nodeType":"133","messageId":"134","endLine":40,"endColumn":19},{"ruleId":"131","severity":1,"message":"144","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"184","line":4,"column":21,"nodeType":"133","messageId":"134","endLine":4,"endColumn":24},{"ruleId":"131","severity":1,"message":"185","line":4,"column":26,"nodeType":"133","messageId":"134","endLine":4,"endColumn":35},{"ruleId":"131","severity":1,"message":"186","line":4,"column":37,"nodeType":"133","messageId":"134","endLine":4,"endColumn":43},{"ruleId":"131","severity":1,"message":"187","line":4,"column":45,"nodeType":"133","messageId":"134","endLine":4,"endColumn":48},{"ruleId":"131","severity":1,"message":"188","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":16},{"ruleId":"131","severity":1,"message":"153","line":56,"column":11,"nodeType":"133","messageId":"134","endLine":56,"endColumn":15},{"ruleId":"131","severity":1,"message":"172","line":56,"column":17,"nodeType":"133","messageId":"134","endLine":56,"endColumn":30},{"ruleId":"131","severity":1,"message":"142","line":56,"column":32,"nodeType":"133","messageId":"134","endLine":56,"endColumn":42},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'CreateUser' is defined but never used.","'classes' is assigned a value but never used.","no-dupe-keys","Duplicate key 'justifyContent'.","ObjectExpression","unexpected","'HomeIcon' is defined but never used.","'profilData' is assigned a value but never used.","'history' is assigned a value but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'Changes' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'onSubmit' function makes the dependencies of useEffect Hook (at line 63) change on every render. To fix this, wrap the definition of 'onSubmit' in its own useCallback() Hook.","VariableDeclarator",["191"],"'passwordCheck' is assigned a value but never used.","'setPasswordcheck' is assigned a value but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'ContactSupportOutlined' is defined but never used.","'FilterOutlined' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-duplicate-case","Duplicate case label.","SwitchCase","'file' is assigned a value but never used.","'errors' is assigned a value but never used.","'getCollection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllUsers' and 'getDataAds'. Either include them or remove the dependency array.","ArrayExpression",["192"],"'allUsers' is assigned a value but never used.","'useEffect' is defined but never used.","'profil' is assigned a value but never used.","'setprofil' is assigned a value but never used.","'setprofilData' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'test' is assigned a value but never used.","'set' is assigned a value but never used.","'Fab' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'Collapse' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Wrap the definition of 'onSubmit' in its own useCallback() Hook.",{"range":"197","text":"198"},"Update the dependencies array to be: [getAllUsers, getDataAds]",{"range":"199","text":"200"},[1297,1353],"useCallback((data, e) => {\n    handelSingIn();\n    // Changes();\n  })",[1634,1636],"[getAllUsers, getDataAds]"]